import{_ as s,o as n,c as a,e as l}from"./app-CnK5B_QS.js";const p={},o=l(`<h1 id="路由的实现" tabindex="-1"><a class="header-anchor" href="#路由的实现"><span>路由的实现</span></a></h1><p>在常用的前端框架（Vue, React 等）中，通常会有 hash 路由 和 history 路由两种路由方式。</p><h2 id="hash-路由" tabindex="-1"><a class="header-anchor" href="#hash-路由"><span>hash 路由：</span></a></h2><ul><li>监听 url 中 hash 的变化，渲染不同的内容，这种路由不向服务器发送请求，不需要服务端的支持；</li><li>事件hashchange只会在 hash 发生变化时才能触发，而第一次加载页面时并不会触发这个事件，因此我们还需要监听load事件。</li></ul><h3 id="location属性" tabindex="-1"><a class="header-anchor" href="#location属性"><span>location属性</span></a></h3><table><thead><tr><th>属性</th><th>含义</th></tr></thead><tbody><tr><td>location.href</td><td>完整的urll</td></tr><tr><td>location.protocol</td><td>当前URL的协议，包括 : ; 比如 https:</td></tr><tr><td>location.host</td><td>主机名和端口号</td></tr><tr><td>location.hostname</td><td>主机名</td></tr><tr><td>location.port</td><td>端口号</td></tr><tr><td>location.pathname</td><td>url的路径部分，从 / 开始;</td></tr><tr><td>location.search</td><td>查询参数，从 ? 开始</td></tr><tr><td>location.hash</td><td>hash值，从 # 开始的</td></tr></tbody></table><h3 id="示例代码" tabindex="-1"><a class="header-anchor" href="#示例代码"><span>示例代码</span></a></h3><div class="language-html line-numbers-mode" data-highlighter="shiki" data-ext="html" data-title="html" style="background-color:#1E1E1E;color:#D4D4D4;"><pre class="shiki dark-plus vp-code"><code><span class="line"><span style="color:#808080;">&lt;!</span><span style="color:#569CD6;">doctype</span><span style="color:#9CDCFE;"> html</span><span style="color:#808080;">&gt;</span></span>
<span class="line"><span style="color:#808080;">&lt;</span><span style="color:#569CD6;">html</span><span style="color:#9CDCFE;"> lang</span><span style="color:#D4D4D4;">=</span><span style="color:#CE9178;">&quot;en&quot;</span><span style="color:#808080;">&gt;</span></span>
<span class="line"><span style="color:#808080;">  &lt;</span><span style="color:#569CD6;">head</span><span style="color:#808080;">&gt;</span></span>
<span class="line"><span style="color:#808080;">    &lt;</span><span style="color:#569CD6;">meta</span><span style="color:#9CDCFE;"> charset</span><span style="color:#D4D4D4;">=</span><span style="color:#CE9178;">&quot;UTF-8&quot;</span><span style="color:#808080;"> /&gt;</span></span>
<span class="line"><span style="color:#808080;">    &lt;</span><span style="color:#569CD6;">meta</span><span style="color:#9CDCFE;"> name</span><span style="color:#D4D4D4;">=</span><span style="color:#CE9178;">&quot;viewport&quot;</span><span style="color:#9CDCFE;"> content</span><span style="color:#D4D4D4;">=</span><span style="color:#CE9178;">&quot;width=device-width, initial-scale=1.0&quot;</span><span style="color:#808080;"> /&gt;</span></span>
<span class="line"><span style="color:#808080;">    &lt;</span><span style="color:#569CD6;">title</span><span style="color:#808080;">&gt;</span><span style="color:#D4D4D4;">Document</span><span style="color:#808080;">&lt;/</span><span style="color:#569CD6;">title</span><span style="color:#808080;">&gt;</span></span>
<span class="line"><span style="color:#808080;">  &lt;/</span><span style="color:#569CD6;">head</span><span style="color:#808080;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#808080;">  &lt;</span><span style="color:#569CD6;">body</span><span style="color:#808080;">&gt;</span></span>
<span class="line"><span style="color:#808080;">    &lt;</span><span style="color:#569CD6;">a</span><span style="color:#9CDCFE;"> href</span><span style="color:#D4D4D4;">=</span><span style="color:#CE9178;">&quot;#/&quot;</span><span style="color:#808080;">&gt;</span><span style="color:#D4D4D4;">主页</span><span style="color:#808080;">&lt;/</span><span style="color:#569CD6;">a</span><span style="color:#808080;">&gt;</span></span>
<span class="line"><span style="color:#808080;">    &lt;</span><span style="color:#569CD6;">a</span><span style="color:#9CDCFE;"> href</span><span style="color:#D4D4D4;">=</span><span style="color:#CE9178;">&quot;#/home&quot;</span><span style="color:#808080;">&gt;</span><span style="color:#D4D4D4;">home</span><span style="color:#808080;">&lt;/</span><span style="color:#569CD6;">a</span><span style="color:#808080;">&gt;</span></span>
<span class="line"><span style="color:#808080;">    &lt;</span><span style="color:#569CD6;">a</span><span style="color:#9CDCFE;"> href</span><span style="color:#D4D4D4;">=</span><span style="color:#CE9178;">&quot;#/index&quot;</span><span style="color:#808080;">&gt;</span><span style="color:#D4D4D4;">index</span><span style="color:#808080;">&lt;/</span><span style="color:#569CD6;">a</span><span style="color:#808080;">&gt;</span></span>
<span class="line"><span style="color:#808080;">    &lt;</span><span style="color:#569CD6;">div</span><span style="color:#9CDCFE;"> id</span><span style="color:#D4D4D4;">=</span><span style="color:#CE9178;">&quot;content&quot;</span><span style="color:#808080;">&gt;&lt;/</span><span style="color:#569CD6;">div</span><span style="color:#808080;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#808080;">    &lt;</span><span style="color:#569CD6;">script</span><span style="color:#808080;">&gt;</span></span>
<span class="line"><span style="color:#6A9955;">      /*</span></span>
<span class="line"><span style="color:#6A9955;">    URL中hash值只是客户端的一种状态，也就是说当向服务器端发出请求时，hash部分不会被发送。</span></span>
<span class="line"><span style="color:#6A9955;">    hash值的改变，都会在浏览器的访问历史中增加一个记录。因此我们能通过浏览器的回退、前进按钮控制hash的切换。</span></span>
<span class="line"><span style="color:#6A9955;">    我们可以使用hashchange事件来监听hash的变化。</span></span>
<span class="line"><span style="color:#6A9955;">    */</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;">      class</span><span style="color:#4EC9B0;"> Router</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#569CD6;">        constructor</span><span style="color:#D4D4D4;">({ </span><span style="color:#9CDCFE;">routes</span><span style="color:#D4D4D4;"> }) {</span></span>
<span class="line"><span style="color:#9CDCFE;">          console</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">log</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">\`Router constructor\`</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#569CD6;">          this</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">routes</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">routes</span></span>
<span class="line"><span style="color:#569CD6;">          this</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">renderPages</span><span style="color:#D4D4D4;"> = {}</span></span>
<span class="line"><span style="color:#569CD6;">          this</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">init</span><span style="color:#D4D4D4;">()</span></span>
<span class="line"><span style="color:#569CD6;">          this</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">routes</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">forEach</span><span style="color:#D4D4D4;">((</span><span style="color:#9CDCFE;">item</span><span style="color:#D4D4D4;">) </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#9CDCFE;">            console</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">log</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">\`setting renderPages[</span><span style="color:#569CD6;">\${</span><span style="color:#9CDCFE;">item</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">path</span><span style="color:#569CD6;">}</span><span style="color:#CE9178;">]\`</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#569CD6;">            this</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">renderPages</span><span style="color:#D4D4D4;">[</span><span style="color:#9CDCFE;">item</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">path</span><span style="color:#D4D4D4;">] = </span><span style="color:#569CD6;">function</span><span style="color:#D4D4D4;"> () {</span></span>
<span class="line"><span style="color:#9CDCFE;">              document</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">getElementById</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;content&#39;</span><span style="color:#D4D4D4;">).</span><span style="color:#9CDCFE;">innerHTML</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">item</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">component</span></span>
<span class="line"><span style="color:#D4D4D4;">            }</span></span>
<span class="line"><span style="color:#D4D4D4;">          })</span></span>
<span class="line"><span style="color:#D4D4D4;">        }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#DCDCAA;">        init</span><span style="color:#D4D4D4;">() {</span></span>
<span class="line"><span style="color:#9CDCFE;">          window</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">addEventListener</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;load&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#569CD6;">this</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">updateLocation</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">bind</span><span style="color:#D4D4D4;">(</span><span style="color:#569CD6;">this</span><span style="color:#D4D4D4;">))</span></span>
<span class="line"><span style="color:#9CDCFE;">          window</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">addEventListener</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;hashchange&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#569CD6;">this</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">updateLocation</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">bind</span><span style="color:#D4D4D4;">(</span><span style="color:#569CD6;">this</span><span style="color:#D4D4D4;">))</span></span>
<span class="line"><span style="color:#D4D4D4;">        }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#DCDCAA;">        updateLocation</span><span style="color:#D4D4D4;">() {</span></span>
<span class="line"><span style="color:#569CD6;">          let</span><span style="color:#9CDCFE;"> pathRes</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">window</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">location</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">hash</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">slice</span><span style="color:#D4D4D4;">(</span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#9CDCFE;">          console</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">log</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">\`renderPages :</span><span style="color:#569CD6;">\${</span><span style="color:#9CDCFE;">pathRes</span><span style="color:#569CD6;">}</span><span style="color:#CE9178;">\`</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#9CDCFE;">          console</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">log</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">\`this.renderPages :\`</span><span style="color:#D4D4D4;">, </span><span style="color:#569CD6;">this</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">renderPages</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#569CD6;">          this</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">renderPages</span><span style="color:#D4D4D4;">[</span><span style="color:#9CDCFE;">pathRes</span><span style="color:#D4D4D4;">]()</span></span>
<span class="line"><span style="color:#D4D4D4;">        }</span></span>
<span class="line"><span style="color:#D4D4D4;">      }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;">      new</span><span style="color:#DCDCAA;"> Router</span><span style="color:#D4D4D4;">({</span></span>
<span class="line"><span style="color:#9CDCFE;">        routes:</span><span style="color:#D4D4D4;"> [</span></span>
<span class="line"><span style="color:#D4D4D4;">          {</span></span>
<span class="line"><span style="color:#9CDCFE;">            path:</span><span style="color:#CE9178;"> &#39;&#39;</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#9CDCFE;">            component:</span><span style="color:#CE9178;"> &#39;主页&#39;</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">          },</span></span>
<span class="line"><span style="color:#D4D4D4;">          {</span></span>
<span class="line"><span style="color:#9CDCFE;">            path:</span><span style="color:#CE9178;"> &#39;/&#39;</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#9CDCFE;">            component:</span><span style="color:#CE9178;"> &#39;主页&#39;</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">          },</span></span>
<span class="line"><span style="color:#D4D4D4;">          {</span></span>
<span class="line"><span style="color:#9CDCFE;">            path:</span><span style="color:#CE9178;"> &#39;/home&#39;</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#9CDCFE;">            component:</span><span style="color:#CE9178;"> &#39;home&#39;</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">          },</span></span>
<span class="line"><span style="color:#D4D4D4;">          {</span></span>
<span class="line"><span style="color:#9CDCFE;">            path:</span><span style="color:#CE9178;"> &#39;/index&#39;</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#9CDCFE;">            component:</span><span style="color:#CE9178;"> &#39;index&#39;</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">          },</span></span>
<span class="line"><span style="color:#D4D4D4;">        ],</span></span>
<span class="line"><span style="color:#D4D4D4;">      })</span></span>
<span class="line"><span style="color:#808080;">    &lt;/</span><span style="color:#569CD6;">script</span><span style="color:#808080;">&gt;</span></span>
<span class="line"><span style="color:#808080;">  &lt;/</span><span style="color:#569CD6;">body</span><span style="color:#808080;">&gt;</span></span>
<span class="line"><span style="color:#808080;">&lt;/</span><span style="color:#569CD6;">html</span><span style="color:#808080;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="history-路由" tabindex="-1"><a class="header-anchor" href="#history-路由"><span>history 路由：</span></a></h2><ul><li>监听 url 中的路径（path）变化，渲染不同的内容，这种路由不向服务器发送请求，需要客户端和服务端共同的支持；</li></ul><h5 id="history路由的特点" tabindex="-1"><a class="header-anchor" href="#history路由的特点"><span>history路由的特点：</span></a></h5><ul><li>url中path值的改变，不会重新加载页面。</li><li>通过popstate事件可以监听到path值的变化。</li></ul><h5 id="注意" tabindex="-1"><a class="header-anchor" href="#注意"><span>注意</span></a></h5><ul><li>和hash路由一样，popstate事件只会在 history 发生变化时才能触发，而第一次加载页面时并不会触发这个事件，因此我们还需要监听load事件。</li><li>pushState和replaceState被调用时，不会触发触发 popstate 事件的，但是我们可以使用window.dispatchEvent来添加事件。</li></ul><h3 id="window-history对象的常用方法" tabindex="-1"><a class="header-anchor" href="#window-history对象的常用方法"><span>window.history对象的常用方法</span></a></h3><table><thead><tr><th>方法</th><th>作用</th></tr></thead><tbody><tr><td>pushState(obj, title, url)</td><td>前进到指定的 url，history栈会新增一条记录，不刷新页面</td></tr><tr><td>replaceState(obj, title, url)</td><td>用 url 替换当前的路由，history栈不会新增记录，不刷新页面</td></tr><tr><td>forward()</td><td>前进到下一个路由，如果存在的话</td></tr><tr><td>back()</td><td>后退到上一个路由</td></tr><tr><td>go(number)</td><td>进入到任意一个路由，正数为前进，负数为后退</td></tr></tbody></table><h3 id="示例代码-1" tabindex="-1"><a class="header-anchor" href="#示例代码-1"><span>示例代码</span></a></h3><p>下面代码用 <strong>live-server</strong> 插件打开</p><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="background-color:#1E1E1E;color:#D4D4D4;"><pre class="shiki dark-plus vp-code"><code><span class="line"><span style="color:#D4D4D4;">&lt;!</span><span style="color:#4FC1FF;">DOCTYPE</span><span style="color:#9CDCFE;"> html</span><span style="color:#D4D4D4;">&gt;</span></span>
<span class="line"><span style="color:#808080;">&lt;</span><span style="color:#569CD6;">html</span><span style="color:#9CDCFE;"> lang</span><span style="color:#D4D4D4;">=</span><span style="color:#CE9178;">&quot;en&quot;</span><span style="color:#808080;">&gt;</span></span>
<span class="line"><span style="color:#808080;">  &lt;</span><span style="color:#569CD6;">head</span><span style="color:#808080;">&gt;</span></span>
<span class="line"><span style="color:#808080;">    &lt;</span><span style="color:#569CD6;">meta</span><span style="color:#9CDCFE;"> charset</span><span style="color:#D4D4D4;">=</span><span style="color:#CE9178;">&quot;UTF-8&quot;</span><span style="color:#808080;"> /&gt;</span></span>
<span class="line"><span style="color:#808080;">    &lt;</span><span style="color:#569CD6;">meta</span><span style="color:#9CDCFE;"> name</span><span style="color:#D4D4D4;">=</span><span style="color:#CE9178;">&quot;viewport&quot;</span><span style="color:#9CDCFE;"> content</span><span style="color:#D4D4D4;">=</span><span style="color:#CE9178;">&quot;width=device-width, initial-scale=1.0&quot;</span><span style="color:#808080;"> /&gt;</span></span>
<span class="line"><span style="color:#808080;">    &lt;</span><span style="color:#569CD6;">title</span><span style="color:#808080;">&gt;</span><span style="color:#D4D4D4;">Document</span><span style="color:#808080;">&lt;/</span><span style="color:#569CD6;">title</span><span style="color:#808080;">&gt;</span></span>
<span class="line"><span style="color:#808080;">  &lt;/</span><span style="color:#569CD6;">head</span><span style="color:#808080;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#808080;">  &lt;</span><span style="color:#569CD6;">body</span><span style="color:#808080;">&gt;</span></span>
<span class="line"><span style="color:#808080;">    &lt;</span><span style="color:#569CD6;">div</span><span style="color:#808080;">&gt;</span></span>
<span class="line"><span style="color:#D4D4D4;">      下面代码用 live-server插件打开</span></span>
<span class="line"><span style="color:#808080;">    &lt;/</span><span style="color:#569CD6;">div</span><span style="color:#808080;">&gt;</span></span>
<span class="line"><span style="color:#808080;">    &lt;</span><span style="color:#569CD6;">div</span><span style="color:#9CDCFE;"> class</span><span style="color:#D4D4D4;">=</span><span style="color:#CE9178;">&quot;container&quot;</span><span style="color:#808080;">&gt;</span></span>
<span class="line"><span style="color:#808080;">      &lt;</span><span style="color:#569CD6;">nav</span><span style="color:#808080;">&gt;</span></span>
<span class="line"><span style="color:#808080;">        &lt;</span><span style="color:#569CD6;">p</span><span style="color:#808080;">&gt;&lt;</span><span style="color:#569CD6;">button</span><span style="color:#9CDCFE;"> class</span><span style="color:#D4D4D4;">=</span><span style="color:#CE9178;">&quot;back&quot;</span><span style="color:#808080;">&gt;</span><span style="color:#D4D4D4;">back</span><span style="color:#808080;">&lt;/</span><span style="color:#569CD6;">button</span><span style="color:#808080;">&gt;&lt;/</span><span style="color:#569CD6;">p</span><span style="color:#808080;">&gt;</span></span>
<span class="line"><span style="color:#808080;">        &lt;</span><span style="color:#569CD6;">p</span><span style="color:#808080;">&gt;&lt;</span><span style="color:#569CD6;">button</span><span style="color:#9CDCFE;"> class</span><span style="color:#D4D4D4;">=</span><span style="color:#CE9178;">&quot;go&quot;</span><span style="color:#808080;">&gt;</span><span style="color:#D4D4D4;">go</span><span style="color:#808080;">&lt;/</span><span style="color:#569CD6;">button</span><span style="color:#808080;">&gt;&lt;/</span><span style="color:#569CD6;">p</span><span style="color:#808080;">&gt;</span></span>
<span class="line"><span style="color:#808080;">        &lt;</span><span style="color:#569CD6;">p</span><span style="color:#808080;">&gt;&lt;</span><span style="color:#569CD6;">button</span><span style="color:#9CDCFE;"> class</span><span style="color:#D4D4D4;">=</span><span style="color:#CE9178;">&quot;pushstate&quot;</span><span style="color:#808080;">&gt;</span><span style="color:#D4D4D4;">pushState</span><span style="color:#808080;">&lt;/</span><span style="color:#569CD6;">button</span><span style="color:#808080;">&gt;&lt;/</span><span style="color:#569CD6;">p</span><span style="color:#808080;">&gt;</span></span>
<span class="line"><span style="color:#808080;">        &lt;</span><span style="color:#569CD6;">p</span><span style="color:#808080;">&gt;&lt;</span><span style="color:#569CD6;">button</span><span style="color:#9CDCFE;"> class</span><span style="color:#D4D4D4;">=</span><span style="color:#CE9178;">&quot;replacestate&quot;</span><span style="color:#808080;">&gt;</span><span style="color:#D4D4D4;">replaceState</span><span style="color:#808080;">&lt;/</span><span style="color:#569CD6;">button</span><span style="color:#808080;">&gt;&lt;/</span><span style="color:#569CD6;">p</span><span style="color:#808080;">&gt;</span></span>
<span class="line"><span style="color:#808080;">      &lt;/</span><span style="color:#569CD6;">nav</span><span style="color:#808080;">&gt;</span></span>
<span class="line"><span style="color:#808080;">      &lt;</span><span style="color:#569CD6;">div</span><span style="color:#9CDCFE;"> id</span><span style="color:#D4D4D4;">=</span><span style="color:#CE9178;">&quot;app&quot;</span><span style="color:#808080;">&gt;</span></span>
<span class="line"><span style="color:#808080;">        &lt;</span><span style="color:#569CD6;">p</span><span style="color:#9CDCFE;"> class</span><span style="color:#D4D4D4;">=</span><span style="color:#CE9178;">&quot;current&quot;</span><span style="color:#808080;">&gt;</span><span style="color:#D4D4D4;">当前URL：</span><span style="color:#808080;">&lt;</span><span style="color:#569CD6;">span</span><span style="color:#808080;">&gt;&lt;/</span><span style="color:#569CD6;">span</span><span style="color:#808080;">&gt;&lt;/</span><span style="color:#569CD6;">p</span><span style="color:#808080;">&gt;</span></span>
<span class="line"><span style="color:#808080;">        &lt;</span><span style="color:#569CD6;">p</span><span style="color:#9CDCFE;"> class</span><span style="color:#D4D4D4;">=</span><span style="color:#CE9178;">&quot;history-len&quot;</span><span style="color:#808080;">&gt;</span><span style="color:#D4D4D4;">历史记录的长度：</span><span style="color:#808080;">&lt;</span><span style="color:#569CD6;">span</span><span style="color:#808080;">&gt;&lt;/</span><span style="color:#569CD6;">span</span><span style="color:#808080;">&gt;&lt;/</span><span style="color:#569CD6;">p</span><span style="color:#808080;">&gt;</span></span>
<span class="line"><span style="color:#808080;">      &lt;/</span><span style="color:#569CD6;">div</span><span style="color:#808080;">&gt;</span></span>
<span class="line"><span style="color:#808080;">    &lt;/</span><span style="color:#569CD6;">div</span><span style="color:#808080;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#808080;">    &lt;</span><span style="color:#569CD6;">script</span><span style="color:#808080;">&gt;</span></span>
<span class="line"><span style="color:#D4D4D4;">      // 声明HistoryRouter</span></span>
<span class="line"><span style="color:#D4D4D4;">      class HistoryRouter </span><span style="color:#569CD6;">{</span></span>
<span class="line"><span style="color:#9CDCFE;">        currentUrl</span><span style="color:#D4D4D4;"> = </span><span style="color:#CE9178;">&quot;&quot;</span><span style="color:#D4D4D4;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#DCDCAA;">        constructor</span><span style="color:#D4D4D4;">() {</span></span>
<span class="line"><span style="color:#D4D4D4;">          this.</span><span style="color:#9CDCFE;">refresh</span><span style="color:#D4D4D4;"> = </span><span style="color:#569CD6;">this</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">refresh</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">bind</span><span style="color:#D4D4D4;">(</span><span style="color:#569CD6;">this</span><span style="color:#D4D4D4;">);</span></span>
<span class="line"><span style="color:#D4D4D4;">          this.addStateListener(); </span><span style="color:#6A9955;">// 添加pushstate/replacestate监听事件</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;">          // 监听所有history事件</span></span>
<span class="line"><span style="color:#D4D4D4;">          window.addEventListener(</span><span style="color:#CE9178;">&quot;load&quot;</span><span style="color:#D4D4D4;">, this.</span><span style="color:#9CDCFE;">refresh</span><span style="color:#D4D4D4;">, false);</span></span>
<span class="line"><span style="color:#D4D4D4;">          window.addEventListener(</span><span style="color:#CE9178;">&quot;popstate&quot;</span><span style="color:#D4D4D4;">, this.</span><span style="color:#9CDCFE;">refresh</span><span style="color:#D4D4D4;">, false);</span></span>
<span class="line"><span style="color:#D4D4D4;">          window.addEventListener(</span><span style="color:#CE9178;">&quot;pushState&quot;</span><span style="color:#D4D4D4;">, this.</span><span style="color:#9CDCFE;">refresh</span><span style="color:#D4D4D4;">, false);</span></span>
<span class="line"><span style="color:#D4D4D4;">          window.addEventListener(</span><span style="color:#CE9178;">&quot;replaceState&quot;</span><span style="color:#D4D4D4;">, this.</span><span style="color:#9CDCFE;">refresh</span><span style="color:#D4D4D4;">, false);</span></span>
<span class="line"><span style="color:#D4D4D4;">        }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;">        /**</span></span>
<span class="line"><span style="color:#6A9955;">         * window只有 load/popsate的事件，没有pushstate/replacestate的事件，这个函数做下hook监听</span></span>
<span class="line"><span style="color:#6A9955;">         */</span></span>
<span class="line"><span style="color:#DCDCAA;">        addStateListener</span><span style="color:#D4D4D4;">() {</span></span>
<span class="line"><span style="color:#D4D4D4;">          const </span><span style="color:#DCDCAA;">listener</span><span style="color:#D4D4D4;"> = </span><span style="color:#569CD6;">function</span><span style="color:#D4D4D4;"> (</span><span style="color:#9CDCFE;">type</span><span style="color:#D4D4D4;">) {</span></span>
<span class="line"><span style="color:#569CD6;">            var</span><span style="color:#9CDCFE;"> orig</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">history</span><span style="color:#D4D4D4;">[</span><span style="color:#9CDCFE;">type</span><span style="color:#D4D4D4;">];</span></span>
<span class="line"><span style="color:#C586C0;">            return</span><span style="color:#569CD6;"> function</span><span style="color:#D4D4D4;"> () {</span></span>
<span class="line"><span style="color:#569CD6;">              var</span><span style="color:#9CDCFE;"> rv</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">orig</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">apply</span><span style="color:#D4D4D4;">(</span><span style="color:#569CD6;">this</span><span style="color:#D4D4D4;">, </span><span style="color:#569CD6;">arguments</span><span style="color:#D4D4D4;">);</span></span>
<span class="line"><span style="color:#569CD6;">              var</span><span style="color:#9CDCFE;"> e</span><span style="color:#D4D4D4;"> = </span><span style="color:#569CD6;">new</span><span style="color:#DCDCAA;"> Event</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">type</span><span style="color:#D4D4D4;">);</span></span>
<span class="line"><span style="color:#9CDCFE;">              e</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">arguments</span><span style="color:#D4D4D4;"> = </span><span style="color:#569CD6;">arguments</span><span style="color:#D4D4D4;">;</span></span>
<span class="line"><span style="color:#9CDCFE;">              window</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">dispatchEvent</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">e</span><span style="color:#D4D4D4;">);</span></span>
<span class="line"><span style="color:#C586C0;">              return</span><span style="color:#9CDCFE;"> rv</span><span style="color:#D4D4D4;">;</span></span>
<span class="line"><span style="color:#D4D4D4;">            };</span></span>
<span class="line"><span style="color:#D4D4D4;">          };</span></span>
<span class="line"><span style="color:#D4D4D4;">          window.history.</span><span style="color:#9CDCFE;">pushState</span><span style="color:#D4D4D4;"> = </span><span style="color:#DCDCAA;">listener</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&quot;pushState&quot;</span><span style="color:#D4D4D4;">);</span></span>
<span class="line"><span style="color:#D4D4D4;">          window.history.</span><span style="color:#9CDCFE;">replaceState</span><span style="color:#D4D4D4;"> = </span><span style="color:#DCDCAA;">listener</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&quot;replaceState&quot;</span><span style="color:#D4D4D4;">);</span></span>
<span class="line"><span style="color:#D4D4D4;">        }</span></span>
<span class="line"><span style="color:#6A9955;">        // state事件统一回调入口</span></span>
<span class="line"><span style="color:#DCDCAA;">        refresh</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">event</span><span style="color:#D4D4D4;">) {</span></span>
<span class="line"><span style="color:#D4D4D4;">          console.log(</span><span style="color:#CE9178;">\`refresh </span><span style="color:#569CD6;">\${</span><span style="color:#9CDCFE;">location</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">pathname</span><span style="color:#569CD6;">}</span><span style="color:#CE9178;">\`</span><span style="color:#9CDCFE;">);</span></span>
<span class="line"><span style="color:#9CDCFE;">          this.currentUrl = location.pathname;</span></span>
<span class="line"><span style="color:#9CDCFE;">          this.emit(</span><span style="color:#CE9178;">&quot;change&quot;</span><span style="color:#D4D4D4;">, location.pathname); </span><span style="color:#6A9955;">//触发change事件</span></span>
<span class="line"><span style="color:#D4D4D4;">          document.querySelector(</span><span style="color:#CE9178;">&quot;#app span&quot;</span><span style="color:#9CDCFE;">).innerHTML = location.pathname;</span></span>
<span class="line"><span style="color:#9CDCFE;">        }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;">        // 事件管理emit/on模式</span></span>
<span class="line"><span style="color:#9CDCFE;">        handlers = {};</span></span>
<span class="line"><span style="color:#9CDCFE;">        on(evName, listener) {</span></span>
<span class="line"><span style="color:#9CDCFE;">          this.handlers[evName] = listener;</span></span>
<span class="line"><span style="color:#9CDCFE;">        }</span></span>
<span class="line"><span style="color:#9CDCFE;">        emit(evName, ...args) {</span></span>
<span class="line"><span style="color:#9CDCFE;">          const handler = this.handlers[evName];</span></span>
<span class="line"><span style="color:#9CDCFE;">          if (handler) {</span></span>
<span class="line"><span style="color:#9CDCFE;">            handler(...args);</span></span>
<span class="line"><span style="color:#9CDCFE;">          }</span></span>
<span class="line"><span style="color:#9CDCFE;">        }</span></span>
<span class="line"><span style="color:#9CDCFE;">      }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;">      //创建HistoryRouter</span></span>
<span class="line"><span style="color:#9CDCFE;">      const router = new HistoryRouter();</span></span>
<span class="line"><span style="color:#6A9955;">      //处理change事件</span></span>
<span class="line"><span style="color:#9CDCFE;">      router.on(</span><span style="color:#CE9178;">&quot;change&quot;</span><span style="color:#D4D4D4;">, </span><span style="color:#DCDCAA;">function</span><span style="color:#D4D4D4;"> (</span><span style="color:#9CDCFE;">curUrl</span><span style="color:#D4D4D4;">) {</span></span>
<span class="line"><span style="color:#9CDCFE;">        console</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">log</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">\`router.on change \`</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">curUrl</span><span style="color:#D4D4D4;">);</span></span>
<span class="line"><span style="color:#9CDCFE;">        document</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">querySelector</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&quot;.current span&quot;</span><span style="color:#D4D4D4;">).</span><span style="color:#9CDCFE;">innerHTML</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">curUrl</span><span style="color:#D4D4D4;">;</span></span>
<span class="line"><span style="color:#9CDCFE;">        document</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">querySelector</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&quot;.history-len span&quot;</span><span style="color:#D4D4D4;">).</span><span style="color:#9CDCFE;">innerHTML</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">history</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">length</span><span style="color:#D4D4D4;">;</span></span>
<span class="line"><span style="color:#D4D4D4;">      });</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;">      //为button添加事件来测试</span></span>
<span class="line"><span style="color:#D4D4D4;">      document.querySelector(</span><span style="color:#CE9178;">&quot;.back&quot;</span><span style="color:#9CDCFE;">).addEventListener(</span><span style="color:#CE9178;">&quot;click&quot;</span><span style="color:#D4D4D4;">, </span><span style="color:#DCDCAA;">function</span><span style="color:#D4D4D4;"> () {</span></span>
<span class="line"><span style="color:#9CDCFE;">        console</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">log</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">\`click back\`</span><span style="color:#D4D4D4;">);</span></span>
<span class="line"><span style="color:#9CDCFE;">        window</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">history</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">back</span><span style="color:#D4D4D4;">();</span></span>
<span class="line"><span style="color:#D4D4D4;">      });</span></span>
<span class="line"><span style="color:#D4D4D4;">      document.querySelector(</span><span style="color:#CE9178;">&quot;.go&quot;</span><span style="color:#9CDCFE;">).addEventListener(</span><span style="color:#CE9178;">&quot;click&quot;</span><span style="color:#D4D4D4;">, </span><span style="color:#DCDCAA;">function</span><span style="color:#D4D4D4;"> () {</span></span>
<span class="line"><span style="color:#9CDCFE;">        console</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">log</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">\`click go\`</span><span style="color:#D4D4D4;">);</span></span>
<span class="line"><span style="color:#9CDCFE;">        window</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">history</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">go</span><span style="color:#D4D4D4;">(</span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">);</span></span>
<span class="line"><span style="color:#D4D4D4;">      });</span></span>
<span class="line"><span style="color:#9CDCFE;">      document</span></span>
<span class="line"><span style="color:#D4D4D4;">        .querySelector(</span><span style="color:#CE9178;">&quot;.pushstate&quot;</span><span style="color:#9CDCFE;">)</span></span>
<span class="line"><span style="color:#9CDCFE;">        .addEventListener(</span><span style="color:#CE9178;">&quot;click&quot;</span><span style="color:#D4D4D4;">, </span><span style="color:#DCDCAA;">function</span><span style="color:#D4D4D4;"> () {</span></span>
<span class="line"><span style="color:#9CDCFE;">          console</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">log</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">\`click pushstate\`</span><span style="color:#D4D4D4;">);</span></span>
<span class="line"><span style="color:#569CD6;">          const</span><span style="color:#4FC1FF;"> url</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">Math</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">random</span><span style="color:#D4D4D4;">().</span><span style="color:#DCDCAA;">toString</span><span style="color:#D4D4D4;">(</span><span style="color:#B5CEA8;">36</span><span style="color:#D4D4D4;">).</span><span style="color:#DCDCAA;">slice</span><span style="color:#D4D4D4;">(-</span><span style="color:#B5CEA8;">6</span><span style="color:#D4D4D4;">) + </span><span style="color:#CE9178;">&quot;.html&quot;</span><span style="color:#D4D4D4;">;</span></span>
<span class="line"><span style="color:#9CDCFE;">          window</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">history</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">pushState</span><span style="color:#D4D4D4;">({}, </span><span style="color:#CE9178;">&quot;&quot;</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">url</span><span style="color:#D4D4D4;">);</span></span>
<span class="line"><span style="color:#D4D4D4;">        });</span></span>
<span class="line"><span style="color:#9CDCFE;">      document</span></span>
<span class="line"><span style="color:#D4D4D4;">        .querySelector(</span><span style="color:#CE9178;">&quot;.replacestate&quot;</span><span style="color:#9CDCFE;">)</span></span>
<span class="line"><span style="color:#9CDCFE;">        .addEventListener(</span><span style="color:#CE9178;">&quot;click&quot;</span><span style="color:#D4D4D4;">, </span><span style="color:#DCDCAA;">function</span><span style="color:#D4D4D4;"> () {</span></span>
<span class="line"><span style="color:#9CDCFE;">          console</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">log</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">\`click replacestate\`</span><span style="color:#D4D4D4;">);</span></span>
<span class="line"><span style="color:#569CD6;">          const</span><span style="color:#4FC1FF;"> url</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">Math</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">random</span><span style="color:#D4D4D4;">().</span><span style="color:#DCDCAA;">toString</span><span style="color:#D4D4D4;">(</span><span style="color:#B5CEA8;">36</span><span style="color:#D4D4D4;">).</span><span style="color:#DCDCAA;">slice</span><span style="color:#D4D4D4;">(-</span><span style="color:#B5CEA8;">6</span><span style="color:#D4D4D4;">) + </span><span style="color:#CE9178;">&quot;.html&quot;</span><span style="color:#D4D4D4;">;</span></span>
<span class="line"><span style="color:#9CDCFE;">          window</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">history</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">replaceState</span><span style="color:#D4D4D4;">({}, </span><span style="color:#CE9178;">&quot;&quot;</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">url</span><span style="color:#D4D4D4;">);</span></span>
<span class="line"><span style="color:#D4D4D4;">        });</span></span>
<span class="line"><span style="color:#D4D4D4;">    &lt;/script&gt;</span></span>
<span class="line"><span style="color:#D4D4D4;">  &lt;/body&gt;</span></span>
<span class="line"><span style="color:#D4D4D4;">&lt;/html&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="js路由" tabindex="-1"><a class="header-anchor" href="#js路由"><span>js路由</span></a></h2><h2 id="react-路由" tabindex="-1"><a class="header-anchor" href="#react-路由"><span>react 路由</span></a></h2><h2 id="vue-路由" tabindex="-1"><a class="header-anchor" href="#vue-路由"><span>vue 路由</span></a></h2>`,22),e=[o];function t(c,r){return n(),a("div",null,e)}const i=s(p,[["render",t],["__file","前端路由实现原理.html.vue"]]),y=JSON.parse('{"path":"/interview/code/%E5%89%8D%E7%AB%AF%E8%B7%AF%E7%94%B1%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86.html","title":"路由的实现","lang":"zh-CN","frontmatter":{"description":"路由的实现 在常用的前端框架（Vue, React 等）中，通常会有 hash 路由 和 history 路由两种路由方式。 hash 路由： 监听 url 中 hash 的变化，渲染不同的内容，这种路由不向服务器发送请求，不需要服务端的支持； 事件hashchange只会在 hash 发生变化时才能触发，而第一次加载页面时并不会触发这个事件，因此我们...","head":[["meta",{"property":"og:url","content":"https://cesium.guowei.fun/interview/code/%E5%89%8D%E7%AB%AF%E8%B7%AF%E7%94%B1%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86.html"}],["meta",{"property":"og:site_name","content":"学习笔记"}],["meta",{"property":"og:title","content":"路由的实现"}],["meta",{"property":"og:description","content":"路由的实现 在常用的前端框架（Vue, React 等）中，通常会有 hash 路由 和 history 路由两种路由方式。 hash 路由： 监听 url 中 hash 的变化，渲染不同的内容，这种路由不向服务器发送请求，不需要服务端的支持； 事件hashchange只会在 hash 发生变化时才能触发，而第一次加载页面时并不会触发这个事件，因此我们..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-11-20T08:17:39.000Z"}],["meta",{"property":"article:modified_time","content":"2024-11-20T08:17:39.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"路由的实现\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-11-20T08:17:39.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"hash 路由：","slug":"hash-路由","link":"#hash-路由","children":[{"level":3,"title":"location属性","slug":"location属性","link":"#location属性","children":[]},{"level":3,"title":"示例代码","slug":"示例代码","link":"#示例代码","children":[]}]},{"level":2,"title":"history 路由：","slug":"history-路由","link":"#history-路由","children":[{"level":3,"title":"window.history对象的常用方法","slug":"window-history对象的常用方法","link":"#window-history对象的常用方法","children":[]},{"level":3,"title":"示例代码","slug":"示例代码-1","link":"#示例代码-1","children":[]}]},{"level":2,"title":"js路由","slug":"js路由","link":"#js路由","children":[]},{"level":2,"title":"react 路由","slug":"react-路由","link":"#react-路由","children":[]},{"level":2,"title":"vue 路由","slug":"vue-路由","link":"#vue-路由","children":[]}],"git":{"updatedTime":1732090659000,"contributors":[{"name":"国wei","email":"ygweric@gmail.com","commits":2}]},"autoDesc":true,"filePathRelative":"interview/code/前端路由实现原理.md"}');export{i as comp,y as data};
