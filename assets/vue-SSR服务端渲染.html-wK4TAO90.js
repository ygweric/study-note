import{_ as s,o as e,c as n,e as a}from"./app-CnK5B_QS.js";const l={},t=a(`<h1 id="vue-ssr服务端渲染" tabindex="-1"><a class="header-anchor" href="#vue-ssr服务端渲染"><span>vue-SSR服务端渲染</span></a></h1><h2 id="ssr-vue静态页面" tabindex="-1"><a class="header-anchor" href="#ssr-vue静态页面"><span>SSR vue静态页面</span></a></h2><p>用<code>createSSRApp</code>渲染，<code>renderToString</code>得到对应的HTML， 拿到对应的html，可以通过express直接返回给接口</p><p>由于前段没有加载vue，因此无法进行交互</p><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="background-color:#1E1E1E;color:#D4D4D4;"><pre class="shiki dark-plus vp-code"><code><span class="line"><span style="color:#6A9955;">// 此文件运行在 Node.js 服务器上</span></span>
<span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> { </span><span style="color:#9CDCFE;">createSSRApp</span><span style="color:#D4D4D4;"> } </span><span style="color:#C586C0;">from</span><span style="color:#CE9178;"> &#39;vue&#39;</span></span>
<span class="line"><span style="color:#6A9955;">// Vue 的服务端渲染 API 位于 \`vue/server-renderer\` 路径下</span></span>
<span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> { </span><span style="color:#9CDCFE;">renderToString</span><span style="color:#D4D4D4;"> } </span><span style="color:#C586C0;">from</span><span style="color:#CE9178;"> &#39;vue/server-renderer&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;">const</span><span style="color:#4FC1FF;"> app</span><span style="color:#D4D4D4;"> = </span><span style="color:#DCDCAA;">createSSRApp</span><span style="color:#D4D4D4;">({</span></span>
<span class="line"><span style="color:#DCDCAA;">  data</span><span style="color:#9CDCFE;">:</span><span style="color:#D4D4D4;"> () </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> ({ </span><span style="color:#9CDCFE;">count:</span><span style="color:#B5CEA8;"> 1</span><span style="color:#D4D4D4;"> }),</span></span>
<span class="line"><span style="color:#9CDCFE;">  template:</span><span style="color:#CE9178;"> \`&lt;button @click=&quot;count++&quot;&gt;{{ count }}&lt;/button&gt;\`</span></span>
<span class="line"><span style="color:#D4D4D4;">})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#DCDCAA;">renderToString</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">app</span><span style="color:#D4D4D4;">).</span><span style="color:#DCDCAA;">then</span><span style="color:#D4D4D4;">((</span><span style="color:#9CDCFE;">html</span><span style="color:#D4D4D4;">) </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#9CDCFE;">  console</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">log</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">html</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">})</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="ssr-客户端激活" tabindex="-1"><a class="header-anchor" href="#ssr-客户端激活"><span>SSR 客户端激活</span></a></h2><p>在激活过程中，Vue 会创建一个与服务端完全相同的应用实例，然后将每个组件与它应该控制的 DOM 节点相匹配，并添加 DOM 事件监听器。</p><ol><li>用<code>server.use(express.static(&#39;.&#39;))</code>来托管客户端文件，当做静态文件等待返回。</li><li>通过<a href="https://github.com/WICG/import-maps" target="_blank" rel="noopener noreferrer">Import Map</a>来在前端引入Vue</li></ol><div class="language-html line-numbers-mode" data-highlighter="shiki" data-ext="html" data-title="html" style="background-color:#1E1E1E;color:#D4D4D4;"><pre class="shiki dark-plus vp-code"><code><span class="line"><span style="color:#808080;">&lt;</span><span style="color:#569CD6;">script</span><span style="color:#9CDCFE;"> type</span><span style="color:#D4D4D4;">=</span><span style="color:#CE9178;">&quot;importmap&quot;</span><span style="color:#808080;">&gt;</span></span>
<span class="line"><span style="color:#D4D4D4;">  {</span></span>
<span class="line"><span style="color:#D4D4D4;">    &quot;imports&quot;: {</span></span>
<span class="line"><span style="color:#D4D4D4;">      &quot;vue&quot;: &quot;https://unpkg.com/vue@3/dist/vue.esm-browser.js&quot;</span></span>
<span class="line"><span style="color:#D4D4D4;">    }</span></span>
<span class="line"><span style="color:#D4D4D4;">  }</span></span>
<span class="line"><span style="color:#808080;">&lt;/</span><span style="color:#569CD6;">script</span><span style="color:#808080;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="3"><li>将 <code>&lt;script type=&quot;module&quot; src=&quot;/client.js&quot;&gt;&lt;/script&gt;</code> 添加到 HTML 外壳以加载客户端入口文件。</li></ol>`,10),o=[t];function p(r,c){return e(),n("div",null,o)}const d=s(l,[["render",p],["__file","vue-SSR服务端渲染.html.vue"]]),D=JSON.parse('{"path":"/interview/code/vue-SSR%E6%9C%8D%E5%8A%A1%E7%AB%AF%E6%B8%B2%E6%9F%93.html","title":"vue-SSR服务端渲染","lang":"zh-CN","frontmatter":{"description":"vue-SSR服务端渲染 SSR vue静态页面 用createSSRApp渲染，renderToString得到对应的HTML， 拿到对应的html，可以通过express直接返回给接口 由于前段没有加载vue，因此无法进行交互 SSR 客户端激活 在激活过程中，Vue 会创建一个与服务端完全相同的应用实例，然后将每个组件与它应该控制的 DOM 节点...","head":[["meta",{"property":"og:url","content":"https://cesium.guowei.fun/interview/code/vue-SSR%E6%9C%8D%E5%8A%A1%E7%AB%AF%E6%B8%B2%E6%9F%93.html"}],["meta",{"property":"og:site_name","content":"学习笔记"}],["meta",{"property":"og:title","content":"vue-SSR服务端渲染"}],["meta",{"property":"og:description","content":"vue-SSR服务端渲染 SSR vue静态页面 用createSSRApp渲染，renderToString得到对应的HTML， 拿到对应的html，可以通过express直接返回给接口 由于前段没有加载vue，因此无法进行交互 SSR 客户端激活 在激活过程中，Vue 会创建一个与服务端完全相同的应用实例，然后将每个组件与它应该控制的 DOM 节点..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-11-20T08:17:39.000Z"}],["meta",{"property":"article:modified_time","content":"2024-11-20T08:17:39.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"vue-SSR服务端渲染\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-11-20T08:17:39.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"SSR vue静态页面","slug":"ssr-vue静态页面","link":"#ssr-vue静态页面","children":[]},{"level":2,"title":"SSR 客户端激活","slug":"ssr-客户端激活","link":"#ssr-客户端激活","children":[]}],"git":{"updatedTime":1732090659000,"contributors":[{"name":"国wei","email":"ygweric@gmail.com","commits":2}]},"autoDesc":true,"filePathRelative":"interview/code/vue-SSR服务端渲染.md"}');export{d as comp,D as data};
