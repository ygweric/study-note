import{_ as s,o as n,c as a,e as l}from"./app-CnK5B_QS.js";const p={},o=l(`<h1 id="lc-17-中-电话号码的字母组合" tabindex="-1"><a class="header-anchor" href="#lc-17-中-电话号码的字母组合"><span>lc-17-中-电话号码的字母组合</span></a></h1><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="background-color:#1E1E1E;color:#D4D4D4;"><pre class="shiki dark-plus vp-code"><code><span class="line"><span style="color:#6A9955;">/*</span></span>
<span class="line"><span style="color:#6A9955;">https://leetcode.cn/problems/letter-combinations-of-a-phone-number/description/</span></span>
<span class="line"><span style="color:#6A9955;">给定一个仅包含数字 2-9 的字符串，返回所有它能表示的字母组合。答案可以按 任意顺序 返回。</span></span>
<span class="line"><span style="color:#6A9955;">给出数字到字母的映射如下（与电话按键相同）。注意 1 不对应任何字母。</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;">*/</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;">/*</span></span>
<span class="line"><span style="color:#6A9955;">    1. 回溯算法，很简单，一把搞定；只是代码不美观</span></span>
<span class="line"><span style="color:#6A9955;">*/</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;">const</span><span style="color:#4FC1FF;"> getLogResultFn</span><span style="color:#D4D4D4;"> = </span><span style="color:#DCDCAA;">require</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&quot;../../utils/logResult&quot;</span><span style="color:#D4D4D4;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;">/**</span></span>
<span class="line"><span style="color:#6A9955;"> * </span><span style="color:#569CD6;">@param</span><span style="color:#4EC9B0;"> {string}</span><span style="color:#9CDCFE;"> digits</span></span>
<span class="line"><span style="color:#6A9955;"> * </span><span style="color:#569CD6;">@return</span><span style="color:#4EC9B0;"> {string[]}</span></span>
<span class="line"><span style="color:#6A9955;"> */</span></span>
<span class="line"><span style="color:#569CD6;">var</span><span style="color:#DCDCAA;"> letterCombinations</span><span style="color:#D4D4D4;"> = </span><span style="color:#569CD6;">function</span><span style="color:#D4D4D4;"> (</span><span style="color:#9CDCFE;">digits</span><span style="color:#D4D4D4;">) {</span></span>
<span class="line"><span style="color:#569CD6;">  const</span><span style="color:#4FC1FF;"> keyChars</span><span style="color:#D4D4D4;"> = {</span></span>
<span class="line"><span style="color:#CE9178;">    &#39;2&#39;</span><span style="color:#9CDCFE;">:</span><span style="color:#CE9178;"> &quot;abc&quot;</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#CE9178;">    &#39;3&#39;</span><span style="color:#9CDCFE;">:</span><span style="color:#CE9178;"> &quot;def&quot;</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#CE9178;">    &#39;4&#39;</span><span style="color:#9CDCFE;">:</span><span style="color:#CE9178;"> &quot;ghi&quot;</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#CE9178;">    &#39;5&#39;</span><span style="color:#9CDCFE;">:</span><span style="color:#CE9178;"> &quot;jkl&quot;</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#CE9178;">    &#39;6&#39;</span><span style="color:#9CDCFE;">:</span><span style="color:#CE9178;"> &quot;mno&quot;</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#CE9178;">    &#39;7&#39;</span><span style="color:#9CDCFE;">:</span><span style="color:#CE9178;"> &quot;pqrs&quot;</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#CE9178;">    &#39;8&#39;</span><span style="color:#9CDCFE;">:</span><span style="color:#CE9178;"> &quot;tuv&quot;</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#CE9178;">    &#39;9&#39;</span><span style="color:#9CDCFE;">:</span><span style="color:#CE9178;"> &quot;wxyz&quot;</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">  };</span></span>
<span class="line"><span style="color:#569CD6;">  let</span><span style="color:#9CDCFE;"> results</span><span style="color:#D4D4D4;"> = [];</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;">  function</span><span style="color:#DCDCAA;"> dfs</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">nums</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">prefixChars</span><span style="color:#D4D4D4;">) {</span></span>
<span class="line"><span style="color:#C586C0;">    if</span><span style="color:#D4D4D4;"> (</span><span style="color:#9CDCFE;">nums</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">length</span><span style="color:#D4D4D4;"> === </span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">) </span><span style="color:#C586C0;">return</span><span style="color:#D4D4D4;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C586C0;">    for</span><span style="color:#D4D4D4;"> (</span><span style="color:#569CD6;">let</span><span style="color:#9CDCFE;"> i</span><span style="color:#D4D4D4;"> = </span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">; </span><span style="color:#9CDCFE;">i</span><span style="color:#D4D4D4;"> &lt; </span><span style="color:#9CDCFE;">keyChars</span><span style="color:#D4D4D4;">[</span><span style="color:#9CDCFE;">nums</span><span style="color:#D4D4D4;">[</span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">]].</span><span style="color:#9CDCFE;">length</span><span style="color:#D4D4D4;">; </span><span style="color:#9CDCFE;">i</span><span style="color:#D4D4D4;">++) {</span></span>
<span class="line"><span style="color:#569CD6;">      let</span><span style="color:#9CDCFE;"> char</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">keyChars</span><span style="color:#D4D4D4;">[</span><span style="color:#9CDCFE;">nums</span><span style="color:#D4D4D4;">[</span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">]][</span><span style="color:#9CDCFE;">i</span><span style="color:#D4D4D4;">];</span></span>
<span class="line"><span style="color:#569CD6;">      let</span><span style="color:#9CDCFE;"> newPrefixChars</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">prefixChars</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">concat</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">char</span><span style="color:#D4D4D4;">);</span></span>
<span class="line"><span style="color:#C586C0;">      if</span><span style="color:#D4D4D4;"> (</span><span style="color:#9CDCFE;">nums</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">length</span><span style="color:#D4D4D4;"> === </span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">) {</span></span>
<span class="line"><span style="color:#9CDCFE;">        results</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">push</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">newPrefixChars</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">join</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;&#39;</span><span style="color:#D4D4D4;">));</span></span>
<span class="line"><span style="color:#D4D4D4;">      } </span><span style="color:#C586C0;">else</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#DCDCAA;">        dfs</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">nums</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">slice</span><span style="color:#D4D4D4;">(</span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">nums</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">length</span><span style="color:#D4D4D4;">), </span><span style="color:#9CDCFE;">newPrefixChars</span><span style="color:#D4D4D4;">);</span></span>
<span class="line"><span style="color:#D4D4D4;">      }</span></span>
<span class="line"><span style="color:#D4D4D4;">    }</span></span>
<span class="line"><span style="color:#D4D4D4;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#DCDCAA;">  dfs</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">digits</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">split</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;&#39;</span><span style="color:#D4D4D4;">), []);</span></span>
<span class="line"><span style="color:#C586C0;">  return</span><span style="color:#9CDCFE;"> results</span><span style="color:#D4D4D4;">;</span></span>
<span class="line"><span style="color:#D4D4D4;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;">const</span><span style="color:#4FC1FF;"> logResult</span><span style="color:#D4D4D4;"> = </span><span style="color:#DCDCAA;">getLogResultFn</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">letterCombinations</span><span style="color:#D4D4D4;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#DCDCAA;">logResult</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&quot;23&quot;</span><span style="color:#D4D4D4;">); </span><span style="color:#6A9955;">// [&quot;ad&quot;,&quot;ae&quot;,&quot;af&quot;,&quot;bd&quot;,&quot;be&quot;,&quot;bf&quot;,&quot;cd&quot;,&quot;ce&quot;,&quot;cf&quot;]</span></span>
<span class="line"><span style="color:#DCDCAA;">logResult</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&quot;&quot;</span><span style="color:#D4D4D4;">); </span><span style="color:#6A9955;">// []</span></span>
<span class="line"><span style="color:#DCDCAA;">logResult</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&quot;2&quot;</span><span style="color:#D4D4D4;">); </span><span style="color:#6A9955;">// [&quot;a&quot;,&quot;b&quot;,&quot;c&quot;]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2),e=[o];function t(c,r){return n(),a("div",null,e)}const i=s(p,[["render",t],["__file","lc-17-中-电话号码的字母组合.html.vue"]]),y=JSON.parse('{"path":"/interview/algorithm/%E9%80%92%E5%BD%92_%E5%9B%9E%E6%BA%AF/lc-17-%E4%B8%AD-%E7%94%B5%E8%AF%9D%E5%8F%B7%E7%A0%81%E7%9A%84%E5%AD%97%E6%AF%8D%E7%BB%84%E5%90%88.html","title":"lc-17-中-电话号码的字母组合","lang":"zh-CN","frontmatter":{"description":"lc-17-中-电话号码的字母组合","head":[["meta",{"property":"og:url","content":"https://cesium.guowei.fun/interview/algorithm/%E9%80%92%E5%BD%92_%E5%9B%9E%E6%BA%AF/lc-17-%E4%B8%AD-%E7%94%B5%E8%AF%9D%E5%8F%B7%E7%A0%81%E7%9A%84%E5%AD%97%E6%AF%8D%E7%BB%84%E5%90%88.html"}],["meta",{"property":"og:site_name","content":"学习笔记"}],["meta",{"property":"og:title","content":"lc-17-中-电话号码的字母组合"}],["meta",{"property":"og:description","content":"lc-17-中-电话号码的字母组合"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-11-20T08:12:25.000Z"}],["meta",{"property":"article:modified_time","content":"2024-11-20T08:12:25.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"lc-17-中-电话号码的字母组合\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-11-20T08:12:25.000Z\\",\\"author\\":[]}"]]},"headers":[],"git":{"updatedTime":1732090345000,"contributors":[{"name":"国wei","email":"ygweric@gmail.com","commits":1}]},"autoDesc":true,"filePathRelative":"interview/algorithm/递归+回溯/lc-17-中-电话号码的字母组合.md"}');export{i as comp,y as data};
