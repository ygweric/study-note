import{_ as s,o as n,c as a,e as l}from"./app-CnK5B_QS.js";const e={},p=l(`<h1 id="lc-1-简-两数之和" tabindex="-1"><a class="header-anchor" href="#lc-1-简-两数之和"><span>lc-1-简-两数之和</span></a></h1><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="background-color:#1E1E1E;color:#D4D4D4;"><pre class="shiki dark-plus vp-code"><code><span class="line"><span style="color:#6A9955;">/*</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;">https://leetcode.cn/problems/two-sum/description/</span></span>
<span class="line"><span style="color:#6A9955;">给定一个整数数组 nums 和一个整数目标值 target，请你在该数组中找出 和为目标值 target  的那 两个 整数，并返回它们的数组下标。</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;">你可以假设每种输入只会对应一个答案。但是，数组中同一个元素在答案里不能重复出现。</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;">你可以按任意顺序返回答案。</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;">研究滑动指针上瘾了，这个上来就排序+滑动指针，发现原来的索引找不到了</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;">优化： 还是hash，很常用的</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;">*/</span></span>
<span class="line"><span style="color:#6A9955;">/**</span></span>
<span class="line"><span style="color:#6A9955;"> * </span><span style="color:#569CD6;">@param</span><span style="color:#4EC9B0;"> {number[]}</span><span style="color:#9CDCFE;"> nums</span></span>
<span class="line"><span style="color:#6A9955;"> * </span><span style="color:#569CD6;">@param</span><span style="color:#4EC9B0;"> {number}</span><span style="color:#9CDCFE;"> target</span></span>
<span class="line"><span style="color:#6A9955;"> * </span><span style="color:#569CD6;">@return</span><span style="color:#4EC9B0;"> {number[]}</span></span>
<span class="line"><span style="color:#6A9955;"> */</span></span>
<span class="line"><span style="color:#569CD6;">var</span><span style="color:#DCDCAA;"> twoSum</span><span style="color:#D4D4D4;"> = </span><span style="color:#569CD6;">function</span><span style="color:#D4D4D4;"> (</span><span style="color:#9CDCFE;">nums</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">target</span><span style="color:#D4D4D4;">) {</span></span>
<span class="line"><span style="color:#569CD6;">  let</span><span style="color:#9CDCFE;"> hash</span><span style="color:#D4D4D4;"> = {};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C586C0;">  for</span><span style="color:#D4D4D4;"> (</span><span style="color:#569CD6;">let</span><span style="color:#9CDCFE;"> i</span><span style="color:#D4D4D4;"> = </span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">; </span><span style="color:#9CDCFE;">i</span><span style="color:#D4D4D4;"> &lt; </span><span style="color:#9CDCFE;">nums</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">length</span><span style="color:#D4D4D4;">; </span><span style="color:#9CDCFE;">i</span><span style="color:#D4D4D4;">++) {</span></span>
<span class="line"><span style="color:#569CD6;">    const</span><span style="color:#4FC1FF;"> val</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">nums</span><span style="color:#D4D4D4;">[</span><span style="color:#9CDCFE;">i</span><span style="color:#D4D4D4;">];</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C586C0;">    if</span><span style="color:#D4D4D4;"> (</span><span style="color:#9CDCFE;">hash</span><span style="color:#D4D4D4;">[</span><span style="color:#9CDCFE;">target</span><span style="color:#D4D4D4;"> - </span><span style="color:#9CDCFE;">val</span><span style="color:#D4D4D4;">] != </span><span style="color:#569CD6;">null</span><span style="color:#D4D4D4;">) {</span></span>
<span class="line"><span style="color:#C586C0;">      return</span><span style="color:#D4D4D4;"> [</span><span style="color:#9CDCFE;">i</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">hash</span><span style="color:#D4D4D4;">[</span><span style="color:#9CDCFE;">target</span><span style="color:#D4D4D4;"> - </span><span style="color:#9CDCFE;">val</span><span style="color:#D4D4D4;">]];</span></span>
<span class="line"><span style="color:#D4D4D4;">    }</span><span style="color:#C586C0;">else</span><span style="color:#D4D4D4;">{</span></span>
<span class="line"><span style="color:#9CDCFE;">      hash</span><span style="color:#D4D4D4;">[</span><span style="color:#9CDCFE;">val</span><span style="color:#D4D4D4;">] = </span><span style="color:#9CDCFE;">i</span></span>
<span class="line"><span style="color:#D4D4D4;">    }</span></span>
<span class="line"><span style="color:#D4D4D4;">  }</span></span>
<span class="line"><span style="color:#D4D4D4;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#9CDCFE;">console</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">log</span><span style="color:#D4D4D4;">(</span><span style="color:#DCDCAA;">twoSum</span><span style="color:#D4D4D4;">([</span><span style="color:#B5CEA8;">2</span><span style="color:#D4D4D4;">,</span><span style="color:#B5CEA8;">7</span><span style="color:#D4D4D4;">,</span><span style="color:#B5CEA8;">11</span><span style="color:#D4D4D4;">,</span><span style="color:#B5CEA8;">15</span><span style="color:#D4D4D4;">], </span><span style="color:#B5CEA8;">9</span><span style="color:#D4D4D4;">)); </span><span style="color:#6A9955;">//  [0,1]</span></span>
<span class="line"><span style="color:#9CDCFE;">console</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">log</span><span style="color:#D4D4D4;">(</span><span style="color:#DCDCAA;">twoSum</span><span style="color:#D4D4D4;">([</span><span style="color:#B5CEA8;">3</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">2</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">4</span><span style="color:#D4D4D4;">], </span><span style="color:#B5CEA8;">6</span><span style="color:#D4D4D4;">)); </span><span style="color:#6A9955;">//  [1,2]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2),o=[p];function c(t,r){return n(),a("div",null,o)}const D=s(e,[["render",c],["__file","lc-1-简-两数之和.html.vue"]]),y=JSON.parse('{"path":"/interview/algorithm/hash/lc-1-%E7%AE%80-%E4%B8%A4%E6%95%B0%E4%B9%8B%E5%92%8C.html","title":"lc-1-简-两数之和","lang":"zh-CN","frontmatter":{"description":"lc-1-简-两数之和","head":[["meta",{"property":"og:url","content":"https://cesium.guowei.fun/interview/algorithm/hash/lc-1-%E7%AE%80-%E4%B8%A4%E6%95%B0%E4%B9%8B%E5%92%8C.html"}],["meta",{"property":"og:site_name","content":"学习笔记"}],["meta",{"property":"og:title","content":"lc-1-简-两数之和"}],["meta",{"property":"og:description","content":"lc-1-简-两数之和"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-11-20T08:12:25.000Z"}],["meta",{"property":"article:modified_time","content":"2024-11-20T08:12:25.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"lc-1-简-两数之和\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-11-20T08:12:25.000Z\\",\\"author\\":[]}"]]},"headers":[],"git":{"updatedTime":1732090345000,"contributors":[{"name":"国wei","email":"ygweric@gmail.com","commits":1}]},"autoDesc":true,"filePathRelative":"interview/algorithm/hash/lc-1-简-两数之和.md"}');export{D as comp,y as data};
