import{_ as s,o as n,c as a,e as l}from"./app-CnK5B_QS.js";const p={},e=l(`<h1 id="lc-997-简-找到小镇的法官" tabindex="-1"><a class="header-anchor" href="#lc-997-简-找到小镇的法官"><span>lc-997- 简-找到小镇的法官</span></a></h1><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="background-color:#1E1E1E;color:#D4D4D4;"><pre class="shiki dark-plus vp-code"><code><span class="line"><span style="color:#6A9955;">/*</span></span>
<span class="line"><span style="color:#6A9955;">https://leetcode.cn/problems/find-the-town-judge/description/</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;">997. 找到小镇的法官</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;">小镇里有 n 个人，按从 1 到 n 的顺序编号。传言称，这些人中有一个暗地里是小镇法官。</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;">如果小镇法官真的存在，那么：</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;">小镇法官不会信任任何人。</span></span>
<span class="line"><span style="color:#6A9955;">每个人（除了小镇法官）都信任这位小镇法官。</span></span>
<span class="line"><span style="color:#6A9955;">只有一个人同时满足属性 1 和属性 2 。</span></span>
<span class="line"><span style="color:#6A9955;">给你一个数组 trust ，其中 trust[i] = [ai, bi] 表示编号为 ai 的人信任编号为 bi 的人。</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;">如果小镇法官存在并且可以确定他的身份，请返回该法官的编号；否则，返回 -1 。</span></span>
<span class="line"><span style="color:#6A9955;">*/</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;">/*</span></span>
<span class="line"><span style="color:#6A9955;">前两天看的题解</span></span>
<span class="line"><span style="color:#6A9955;">今天做，一遍成功</span></span>
<span class="line"><span style="color:#6A9955;">2： 新增剪枝，减少时间</span></span>
<span class="line"><span style="color:#6A9955;">3： 剪枝后，不需要记录max状态</span></span>
<span class="line"><span style="color:#6A9955;">*/</span></span>
<span class="line"><span style="color:#569CD6;">var</span><span style="color:#DCDCAA;"> findJudge</span><span style="color:#D4D4D4;"> = </span><span style="color:#569CD6;">function</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">n</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">trust</span><span style="color:#D4D4D4;">) {</span></span>
<span class="line"><span style="color:#569CD6;">  let</span><span style="color:#9CDCFE;"> persons</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">Array</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">from</span><span style="color:#D4D4D4;">({</span><span style="color:#9CDCFE;">length:</span><span style="color:#9CDCFE;"> n</span><span style="color:#D4D4D4;">+</span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">}, ()</span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;">({</span><span style="color:#9CDCFE;">inDegree:</span><span style="color:#B5CEA8;"> 0</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">outDegree:</span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">}))</span></span>
<span class="line"><span style="color:#9CDCFE;">  trust</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">forEach</span><span style="color:#D4D4D4;">(([</span><span style="color:#9CDCFE;">a</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">b</span><span style="color:#D4D4D4;">]) </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#9CDCFE;">    persons</span><span style="color:#D4D4D4;">[</span><span style="color:#9CDCFE;">a</span><span style="color:#D4D4D4;">].</span><span style="color:#9CDCFE;">outDegree</span><span style="color:#D4D4D4;">++</span></span>
<span class="line"><span style="color:#9CDCFE;">    persons</span><span style="color:#D4D4D4;">[</span><span style="color:#9CDCFE;">b</span><span style="color:#D4D4D4;">].</span><span style="color:#9CDCFE;">inDegree</span><span style="color:#D4D4D4;">++</span></span>
<span class="line"><span style="color:#D4D4D4;">  });</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span></span>
<span class="line"><span style="color:#C586C0;">  for</span><span style="color:#D4D4D4;"> (</span><span style="color:#569CD6;">let</span><span style="color:#9CDCFE;"> i</span><span style="color:#D4D4D4;"> = </span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">; </span><span style="color:#9CDCFE;">i</span><span style="color:#D4D4D4;"> &lt; </span><span style="color:#9CDCFE;">persons</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">length</span><span style="color:#D4D4D4;">; </span><span style="color:#9CDCFE;">i</span><span style="color:#D4D4D4;">++) {</span></span>
<span class="line"><span style="color:#569CD6;">    const</span><span style="color:#4FC1FF;"> person</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">persons</span><span style="color:#D4D4D4;">[</span><span style="color:#9CDCFE;">i</span><span style="color:#D4D4D4;">];</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C586C0;">    if</span><span style="color:#D4D4D4;"> (</span><span style="color:#9CDCFE;">person</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">outDegree</span><span style="color:#D4D4D4;"> ===</span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;"> &amp;&amp; </span><span style="color:#9CDCFE;">person</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">inDegree</span><span style="color:#D4D4D4;"> === </span><span style="color:#9CDCFE;">n</span><span style="color:#D4D4D4;">-</span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">) {</span></span>
<span class="line"><span style="color:#C586C0;">      return</span><span style="color:#9CDCFE;"> i</span></span>
<span class="line"><span style="color:#D4D4D4;">    }</span></span>
<span class="line"><span style="color:#D4D4D4;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C586C0;">  return</span><span style="color:#D4D4D4;"> -</span><span style="color:#B5CEA8;">1</span></span>
<span class="line"><span style="color:#D4D4D4;">};  </span></span>
<span class="line"></span>
<span class="line"><span style="color:#9CDCFE;">console</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">log</span><span style="color:#D4D4D4;">(</span><span style="color:#DCDCAA;">findJudge</span><span style="color:#D4D4D4;">(</span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">, [])); </span><span style="color:#6A9955;">// 1</span></span>
<span class="line"><span style="color:#9CDCFE;">console</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">log</span><span style="color:#D4D4D4;">(</span><span style="color:#DCDCAA;">findJudge</span><span style="color:#D4D4D4;">(</span><span style="color:#B5CEA8;">2</span><span style="color:#D4D4D4;">, [[</span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">,</span><span style="color:#B5CEA8;">2</span><span style="color:#D4D4D4;">]])); </span><span style="color:#6A9955;">// 2</span></span>
<span class="line"><span style="color:#9CDCFE;">console</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">log</span><span style="color:#D4D4D4;">(</span><span style="color:#DCDCAA;">findJudge</span><span style="color:#D4D4D4;">(</span><span style="color:#B5CEA8;">3</span><span style="color:#D4D4D4;">, [[</span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">,</span><span style="color:#B5CEA8;">3</span><span style="color:#D4D4D4;">],[</span><span style="color:#B5CEA8;">2</span><span style="color:#D4D4D4;">,</span><span style="color:#B5CEA8;">3</span><span style="color:#D4D4D4;">]])); </span><span style="color:#6A9955;">// 3</span></span>
<span class="line"><span style="color:#9CDCFE;">console</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">log</span><span style="color:#D4D4D4;">(</span><span style="color:#DCDCAA;">findJudge</span><span style="color:#D4D4D4;">(</span><span style="color:#B5CEA8;">3</span><span style="color:#D4D4D4;">, [[</span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">,</span><span style="color:#B5CEA8;">3</span><span style="color:#D4D4D4;">],[</span><span style="color:#B5CEA8;">2</span><span style="color:#D4D4D4;">,</span><span style="color:#B5CEA8;">3</span><span style="color:#D4D4D4;">],[</span><span style="color:#B5CEA8;">3</span><span style="color:#D4D4D4;">,</span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">]])); </span><span style="color:#6A9955;">//-1</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2),o=[e];function c(r,t){return n(),a("div",null,o)}const i=s(p,[["render",c],["__file","lc-997-简-找到小镇的法官.html.vue"]]),y=JSON.parse('{"path":"/interview/algorithm/%E5%9B%BE/lc-997-%E7%AE%80-%E6%89%BE%E5%88%B0%E5%B0%8F%E9%95%87%E7%9A%84%E6%B3%95%E5%AE%98.html","title":"lc-997- 简-找到小镇的法官","lang":"zh-CN","frontmatter":{"description":"lc-997- 简-找到小镇的法官","head":[["meta",{"property":"og:url","content":"https://cesium.guowei.fun/interview/algorithm/%E5%9B%BE/lc-997-%E7%AE%80-%E6%89%BE%E5%88%B0%E5%B0%8F%E9%95%87%E7%9A%84%E6%B3%95%E5%AE%98.html"}],["meta",{"property":"og:site_name","content":"学习笔记"}],["meta",{"property":"og:title","content":"lc-997- 简-找到小镇的法官"}],["meta",{"property":"og:description","content":"lc-997- 简-找到小镇的法官"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-11-20T08:12:25.000Z"}],["meta",{"property":"article:modified_time","content":"2024-11-20T08:12:25.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"lc-997- 简-找到小镇的法官\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-11-20T08:12:25.000Z\\",\\"author\\":[]}"]]},"headers":[],"git":{"updatedTime":1732090345000,"contributors":[{"name":"国wei","email":"ygweric@gmail.com","commits":1}]},"autoDesc":true,"filePathRelative":"interview/algorithm/图/lc-997-简-找到小镇的法官.md"}');export{i as comp,y as data};
