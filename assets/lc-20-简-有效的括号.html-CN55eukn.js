import{_ as s,o as n,c as a,e as l}from"./app-CnK5B_QS.js";const o={},p=l(`<h1 id="lc-20-简-有效的括号" tabindex="-1"><a class="header-anchor" href="#lc-20-简-有效的括号"><span>lc-20-简-有效的括号</span></a></h1><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="background-color:#1E1E1E;color:#D4D4D4;"><pre class="shiki dark-plus vp-code"><code><span class="line"><span style="color:#6A9955;">/*</span></span>
<span class="line"><span style="color:#6A9955;">https://leetcode.cn/problems/valid-parentheses/</span></span>
<span class="line"><span style="color:#6A9955;">给定一个只包括 &#39;(&#39;，&#39;)&#39;，&#39;{&#39;，&#39;}&#39;，&#39;[&#39;，&#39;]&#39; 的字符串 s ，判断字符串是否有效。</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;">有效字符串需满足：</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;">左括号必须用相同类型的右括号闭合。</span></span>
<span class="line"><span style="color:#6A9955;">左括号必须以正确的顺序闭合。</span></span>
<span class="line"><span style="color:#6A9955;">每个右括号都有一个对应的相同类型的左括号。</span></span>
<span class="line"><span style="color:#6A9955;">*/</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;">var</span><span style="color:#DCDCAA;"> isValid</span><span style="color:#D4D4D4;"> = </span><span style="color:#569CD6;">function</span><span style="color:#D4D4D4;"> (</span><span style="color:#9CDCFE;">s</span><span style="color:#D4D4D4;">) {</span></span>
<span class="line"><span style="color:#569CD6;">  let</span><span style="color:#9CDCFE;"> pairs</span><span style="color:#D4D4D4;"> = {</span></span>
<span class="line"><span style="color:#6A9955;">    // &quot;(&quot;: &quot;)&quot;,</span></span>
<span class="line"><span style="color:#CE9178;">    &quot;)&quot;</span><span style="color:#9CDCFE;">:</span><span style="color:#CE9178;"> &quot;(&quot;</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#6A9955;">    // &quot;[&quot;: &quot;]&quot;,</span></span>
<span class="line"><span style="color:#CE9178;">    &quot;]&quot;</span><span style="color:#9CDCFE;">:</span><span style="color:#CE9178;"> &quot;[&quot;</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#6A9955;">    // &quot;{&quot;: &quot;}&quot;,</span></span>
<span class="line"><span style="color:#CE9178;">    &quot;}&quot;</span><span style="color:#9CDCFE;">:</span><span style="color:#CE9178;"> &quot;{&quot;</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">  };</span></span>
<span class="line"><span style="color:#569CD6;">  let</span><span style="color:#9CDCFE;"> stack</span><span style="color:#D4D4D4;"> = [];</span></span>
<span class="line"><span style="color:#C586C0;">  for</span><span style="color:#D4D4D4;"> (</span><span style="color:#569CD6;">let</span><span style="color:#9CDCFE;"> i</span><span style="color:#D4D4D4;"> = </span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">; </span><span style="color:#9CDCFE;">i</span><span style="color:#D4D4D4;"> &lt; </span><span style="color:#9CDCFE;">s</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">length</span><span style="color:#D4D4D4;">; </span><span style="color:#9CDCFE;">i</span><span style="color:#D4D4D4;">++) {</span></span>
<span class="line"><span style="color:#C586C0;">    if</span><span style="color:#D4D4D4;"> (!</span><span style="color:#9CDCFE;">pairs</span><span style="color:#D4D4D4;">[</span><span style="color:#9CDCFE;">s</span><span style="color:#D4D4D4;">[</span><span style="color:#9CDCFE;">i</span><span style="color:#D4D4D4;">]] || </span><span style="color:#9CDCFE;">stack</span><span style="color:#D4D4D4;">[</span><span style="color:#9CDCFE;">stack</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">length</span><span style="color:#D4D4D4;"> - </span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">] !== </span><span style="color:#9CDCFE;">pairs</span><span style="color:#D4D4D4;">[</span><span style="color:#9CDCFE;">s</span><span style="color:#D4D4D4;">[</span><span style="color:#9CDCFE;">i</span><span style="color:#D4D4D4;">]]) {</span></span>
<span class="line"><span style="color:#9CDCFE;">      stack</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">push</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">s</span><span style="color:#D4D4D4;">[</span><span style="color:#9CDCFE;">i</span><span style="color:#D4D4D4;">]);</span></span>
<span class="line"><span style="color:#D4D4D4;">    } </span><span style="color:#C586C0;">else</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#9CDCFE;">      stack</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">pop</span><span style="color:#D4D4D4;">();</span></span>
<span class="line"><span style="color:#D4D4D4;">    }</span></span>
<span class="line"><span style="color:#D4D4D4;">  }</span></span>
<span class="line"><span style="color:#C586C0;">  return</span><span style="color:#9CDCFE;"> stack</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">length</span><span style="color:#D4D4D4;"> === </span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">;</span></span>
<span class="line"><span style="color:#D4D4D4;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#9CDCFE;">console</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">log</span><span style="color:#D4D4D4;">(</span><span style="color:#DCDCAA;">isValid</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&quot;()[]{}&quot;</span><span style="color:#D4D4D4;">)); </span><span style="color:#6A9955;">// true</span></span>
<span class="line"><span style="color:#9CDCFE;">console</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">log</span><span style="color:#D4D4D4;">(</span><span style="color:#DCDCAA;">isValid</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&quot;()&quot;</span><span style="color:#D4D4D4;">)); </span><span style="color:#6A9955;">// true</span></span>
<span class="line"><span style="color:#9CDCFE;">console</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">log</span><span style="color:#D4D4D4;">(</span><span style="color:#DCDCAA;">isValid</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&quot;(]&quot;</span><span style="color:#D4D4D4;">)); </span><span style="color:#6A9955;">// false</span></span>
<span class="line"><span style="color:#9CDCFE;">console</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">log</span><span style="color:#D4D4D4;">(</span><span style="color:#DCDCAA;">isValid</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&quot;(){}}{&quot;</span><span style="color:#D4D4D4;">)); </span><span style="color:#6A9955;">// false</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2),e=[p];function t(c,r){return n(),a("div",null,e)}const i=s(o,[["render",t],["__file","lc-20-简-有效的括号.html.vue"]]),y=JSON.parse('{"path":"/interview/algorithm/%E5%BE%85%E5%88%86%E7%B1%BB/lc-20-%E7%AE%80-%E6%9C%89%E6%95%88%E7%9A%84%E6%8B%AC%E5%8F%B7.html","title":"lc-20-简-有效的括号","lang":"zh-CN","frontmatter":{"description":"lc-20-简-有效的括号","head":[["meta",{"property":"og:url","content":"https://cesium.guowei.fun/interview/algorithm/%E5%BE%85%E5%88%86%E7%B1%BB/lc-20-%E7%AE%80-%E6%9C%89%E6%95%88%E7%9A%84%E6%8B%AC%E5%8F%B7.html"}],["meta",{"property":"og:site_name","content":"学习笔记"}],["meta",{"property":"og:title","content":"lc-20-简-有效的括号"}],["meta",{"property":"og:description","content":"lc-20-简-有效的括号"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-11-20T08:12:25.000Z"}],["meta",{"property":"article:modified_time","content":"2024-11-20T08:12:25.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"lc-20-简-有效的括号\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-11-20T08:12:25.000Z\\",\\"author\\":[]}"]]},"headers":[],"git":{"updatedTime":1732090345000,"contributors":[{"name":"国wei","email":"ygweric@gmail.com","commits":1}]},"autoDesc":true,"filePathRelative":"interview/algorithm/待分类/lc-20-简-有效的括号.md"}');export{i as comp,y as data};
