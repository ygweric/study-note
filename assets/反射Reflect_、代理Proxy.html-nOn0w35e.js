import{_ as s,o as n,c as l,e as a}from"./app-CnK5B_QS.js";const p={},o=a(`<h1 id="反射reflect-、代理proxy" tabindex="-1"><a class="header-anchor" href="#反射reflect-、代理proxy"><span>反射Reflect,、代理Proxy</span></a></h1><ul><li><a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Proxy/Proxy" target="_blank" rel="noopener noreferrer">Proxy</a></li><li><a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Reflect" target="_blank" rel="noopener noreferrer">Reflect</a></li><li><a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Reflect/Comparing_Reflect_and_Object_methods" target="_blank" rel="noopener noreferrer">比较 Reflect 和 Object 方法</a></li></ul><h2 id="反射reflect" tabindex="-1"><a class="header-anchor" href="#反射reflect"><span>反射Reflect</span></a></h2><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="background-color:#1E1E1E;color:#D4D4D4;"><pre class="shiki dark-plus vp-code"><code><span class="line"></span>
<span class="line"><span style="color:#6A9955;">//*</span></span>
<span class="line"><span style="color:#DCDCAA;">setTimeout</span><span style="color:#D4D4D4;">(() </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#9CDCFE;">  console</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">log</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; Reflect.construct&#39;</span><span style="color:#D4D4D4;">);</span></span>
<span class="line"><span style="color:#9CDCFE;">  console</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">log</span><span style="color:#D4D4D4;">(</span><span style="color:#569CD6;">new</span><span style="color:#DCDCAA;"> String</span><span style="color:#D4D4D4;">(</span><span style="color:#B5CEA8;">123</span><span style="color:#D4D4D4;">));</span></span>
<span class="line"><span style="color:#9CDCFE;">  console</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">log</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">Reflect</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">construct</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">String</span><span style="color:#D4D4D4;">, [</span><span style="color:#B5CEA8;">123</span><span style="color:#D4D4D4;">]));</span></span>
<span class="line"><span style="color:#D4D4D4;">}, </span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">);</span></span>
<span class="line"><span style="color:#6A9955;">//*/</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;">//*</span></span>
<span class="line"><span style="color:#DCDCAA;">setTimeout</span><span style="color:#D4D4D4;">(() </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#9CDCFE;">  console</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">log</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; Reflect.apply&#39;</span><span style="color:#D4D4D4;">);</span></span>
<span class="line"><span style="color:#569CD6;">  function</span><span style="color:#DCDCAA;"> Person</span><span style="color:#D4D4D4;">() {</span></span>
<span class="line"><span style="color:#569CD6;">    this</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">name</span><span style="color:#D4D4D4;"> = </span><span style="color:#CE9178;">&#39;foo&#39;</span></span>
<span class="line"><span style="color:#569CD6;">    this</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">getName</span><span style="color:#D4D4D4;"> = </span><span style="color:#569CD6;">function</span><span style="color:#D4D4D4;"> (</span><span style="color:#9CDCFE;">num</span><span style="color:#D4D4D4;">) {</span></span>
<span class="line"><span style="color:#C586C0;">      return</span><span style="color:#569CD6;"> this</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">name</span><span style="color:#D4D4D4;"> + </span><span style="color:#9CDCFE;">num</span></span>
<span class="line"><span style="color:#D4D4D4;">    }</span></span>
<span class="line"><span style="color:#D4D4D4;">  }</span></span>
<span class="line"><span style="color:#569CD6;">  this</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">name</span><span style="color:#D4D4D4;"> = </span><span style="color:#CE9178;">&#39;bar&#39;</span></span>
<span class="line"><span style="color:#569CD6;">  const</span><span style="color:#4FC1FF;"> person</span><span style="color:#D4D4D4;"> = </span><span style="color:#569CD6;">new</span><span style="color:#DCDCAA;"> Person</span><span style="color:#D4D4D4;">()</span></span>
<span class="line"><span style="color:#9CDCFE;">  console</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">log</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">person</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">getName</span><span style="color:#D4D4D4;">(</span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">));</span></span>
<span class="line"><span style="color:#9CDCFE;">  console</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">log</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">person</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">getName</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">apply</span><span style="color:#D4D4D4;">(</span><span style="color:#569CD6;">this</span><span style="color:#D4D4D4;">, [</span><span style="color:#B5CEA8;">2</span><span style="color:#D4D4D4;">]));</span></span>
<span class="line"><span style="color:#9CDCFE;">  console</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">log</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">Reflect</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">apply</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">person</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">getName</span><span style="color:#D4D4D4;">, </span><span style="color:#569CD6;">this</span><span style="color:#D4D4D4;">, [</span><span style="color:#B5CEA8;">2</span><span style="color:#D4D4D4;">]));</span></span>
<span class="line"><span style="color:#D4D4D4;">}, </span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">);</span></span>
<span class="line"><span style="color:#6A9955;">//*/</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;">//*</span></span>
<span class="line"><span style="color:#DCDCAA;">setTimeout</span><span style="color:#D4D4D4;">(() </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#9CDCFE;">  console</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">log</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; Reflect.ownKeys&#39;</span><span style="color:#D4D4D4;">);</span></span>
<span class="line"><span style="color:#569CD6;">  let</span><span style="color:#9CDCFE;"> myObject</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">Object</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">create</span><span style="color:#D4D4D4;">(</span><span style="color:#569CD6;">null</span><span style="color:#D4D4D4;">) </span><span style="color:#6A9955;">// 此时myObject并没有继承Object这个原型的任何方法,因此有：</span></span>
<span class="line"><span style="color:#9CDCFE;">  console</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">log</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;myObject.hasOwnProperty === undefined: &#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">myObject</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">hasOwnProperty</span><span style="color:#D4D4D4;"> === </span><span style="color:#569CD6;">undefined</span><span style="color:#D4D4D4;">); </span><span style="color:#6A9955;">// 此时myObject是没有hasOwnProperty这个方法，那么我们要如何使用呢？如下：</span></span>
<span class="line"><span style="color:#9CDCFE;">  console</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">log</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;Object.prototype.hasOwnProperty.call(myObject, &quot;foo&quot;): &#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#4EC9B0;">Object</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">prototype</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">hasOwnProperty</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">call</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">myObject</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;foo&#39;</span><span style="color:#D4D4D4;">)); </span><span style="color:#6A9955;">// 是不是很恐怖，写这么一大串的代码！！！！</span></span>
<span class="line"><span style="color:#9CDCFE;">  console</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">log</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;Reflect.ownKeys(myObject): &#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">Reflect</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">ownKeys</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">myObject</span><span style="color:#D4D4D4;">));</span></span>
<span class="line"><span style="color:#D4D4D4;">}, </span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">);</span></span>
<span class="line"><span style="color:#6A9955;">//*/</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;">//*</span></span>
<span class="line"><span style="color:#DCDCAA;">setTimeout</span><span style="color:#D4D4D4;">(() </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#9CDCFE;">  console</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">log</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; Reflect.ownKeys -&gt; Symbol&#39;</span><span style="color:#D4D4D4;">);</span></span>
<span class="line"><span style="color:#569CD6;">  var</span><span style="color:#9CDCFE;"> s</span><span style="color:#D4D4D4;"> = </span><span style="color:#DCDCAA;">Symbol</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;foo&#39;</span><span style="color:#D4D4D4;">);</span></span>
<span class="line"><span style="color:#569CD6;">  var</span><span style="color:#9CDCFE;"> k</span><span style="color:#D4D4D4;"> = </span><span style="color:#CE9178;">&#39;bar&#39;</span><span style="color:#D4D4D4;">;</span></span>
<span class="line"><span style="color:#569CD6;">  var</span><span style="color:#9CDCFE;"> o</span><span style="color:#D4D4D4;"> = { </span><span style="color:#9CDCFE;">[s]:</span><span style="color:#B5CEA8;"> 1</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">[k]:</span><span style="color:#B5CEA8;"> 1</span><span style="color:#D4D4D4;"> };</span></span>
<span class="line"><span style="color:#9CDCFE;">  console</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">log</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;Object.getOwnPropertyNames(o): &#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">Object</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">getOwnPropertyNames</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">o</span><span style="color:#D4D4D4;">));</span></span>
<span class="line"><span style="color:#9CDCFE;">  console</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">log</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;Object.getOwnPropertySymbols(o): &#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">Object</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">getOwnPropertySymbols</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">o</span><span style="color:#D4D4D4;">));</span></span>
<span class="line"><span style="color:#9CDCFE;">  console</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">log</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;Reflect.ownKeys(o): &#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">Reflect</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">ownKeys</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">o</span><span style="color:#D4D4D4;">));</span></span>
<span class="line"><span style="color:#D4D4D4;">}, </span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">);</span></span>
<span class="line"><span style="color:#6A9955;">//*/</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;">//*</span></span>
<span class="line"><span style="color:#DCDCAA;">setTimeout</span><span style="color:#D4D4D4;">(() </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#9CDCFE;">  console</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">log</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; Reflect. get/set/has&#39;</span><span style="color:#D4D4D4;">);</span></span>
<span class="line"><span style="color:#569CD6;">  const</span><span style="color:#4FC1FF;"> testObject</span><span style="color:#D4D4D4;"> = {</span></span>
<span class="line"><span style="color:#9CDCFE;">    a:</span><span style="color:#CE9178;"> &#39;you&#39;</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#9CDCFE;">    b:</span><span style="color:#CE9178;"> &#39;like&#39;</span></span>
<span class="line"><span style="color:#D4D4D4;">  }</span></span>
<span class="line"><span style="color:#9CDCFE;">  console</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">log</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;Reflect.get(testObject, &quot;a&quot;): &#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">Reflect</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">get</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">testObject</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;a&#39;</span><span style="color:#D4D4D4;">));</span></span>
<span class="line"><span style="color:#9CDCFE;">  Reflect</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">set</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">testObject</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;a&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;me&#39;</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#9CDCFE;">  console</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">log</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;Reflect.get(testObject, &quot;a&quot;): &#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">Reflect</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">get</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">testObject</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;a&#39;</span><span style="color:#D4D4D4;">));</span></span>
<span class="line"><span style="color:#9CDCFE;">  console</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">log</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;Reflect.has(testObject, &quot;a&quot;): &#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">Reflect</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">has</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">testObject</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;a&#39;</span><span style="color:#D4D4D4;">));</span></span>
<span class="line"><span style="color:#9CDCFE;">  console</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">log</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;Reflect.has(testObject, &quot;d&quot;): &#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">Reflect</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">has</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">testObject</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;d&#39;</span><span style="color:#D4D4D4;">));</span></span>
<span class="line"><span style="color:#D4D4D4;">}, </span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">);</span></span>
<span class="line"><span style="color:#6A9955;">//*/</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;">//*</span></span>
<span class="line"><span style="color:#DCDCAA;">setTimeout</span><span style="color:#D4D4D4;">(() </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#9CDCFE;">  console</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">log</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; Reflect.getPrototypeOf&#39;</span><span style="color:#D4D4D4;">);</span></span>
<span class="line"><span style="color:#569CD6;">  let</span><span style="color:#9CDCFE;"> object</span><span style="color:#D4D4D4;"> = { </span><span style="color:#9CDCFE;">name:</span><span style="color:#CE9178;"> &#39;rrr&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">age:</span><span style="color:#B5CEA8;"> 18</span><span style="color:#D4D4D4;"> }</span></span>
<span class="line"><span style="color:#9CDCFE;">  console</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">log</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;Object.getPrototypeOf(object): &#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">Object</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">getPrototypeOf</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">object</span><span style="color:#D4D4D4;">));</span></span>
<span class="line"><span style="color:#9CDCFE;">  console</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">log</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;Reflect.getPrototypeOf(object): &#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">Reflect</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">getPrototypeOf</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">object</span><span style="color:#D4D4D4;">));</span></span>
<span class="line"></span>
<span class="line"><span style="color:#9CDCFE;">  console</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">log</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;Object.getPrototypeOf(1): &#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">Object</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">getPrototypeOf</span><span style="color:#D4D4D4;">(</span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">));</span></span>
<span class="line"><span style="color:#6A9955;">  // 等同于Object.getPrototypeOf(),唯一不同的是当传参target不是一个对象的时候：前者会强制将target转为一个对象。</span></span>
<span class="line"><span style="color:#6A9955;">  // console.log(&#39;Reflect.getPrototypeOf(1): &#39;, Reflect.getPrototypeOf(1));</span></span>
<span class="line"><span style="color:#D4D4D4;">}, </span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">);</span></span>
<span class="line"><span style="color:#6A9955;">//*/</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;">//*</span></span>
<span class="line"><span style="color:#DCDCAA;">setTimeout</span><span style="color:#D4D4D4;">(() </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#9CDCFE;">  console</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">log</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; for of/in Array&#39;</span><span style="color:#D4D4D4;">);</span></span>
<span class="line"><span style="color:#569CD6;">  let</span><span style="color:#9CDCFE;"> array</span><span style="color:#D4D4D4;"> = [</span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">2</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">3</span><span style="color:#D4D4D4;">]</span></span>
<span class="line"><span style="color:#C586C0;">  for</span><span style="color:#D4D4D4;"> (</span><span style="color:#569CD6;">const</span><span style="color:#4FC1FF;"> iterator</span><span style="color:#569CD6;"> of</span><span style="color:#9CDCFE;"> array</span><span style="color:#D4D4D4;">) {</span></span>
<span class="line"><span style="color:#9CDCFE;">    console</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">log</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">iterator</span><span style="color:#D4D4D4;">);</span></span>
<span class="line"><span style="color:#D4D4D4;">  }</span></span>
<span class="line"><span style="color:#C586C0;">  for</span><span style="color:#D4D4D4;"> (</span><span style="color:#569CD6;">const</span><span style="color:#4FC1FF;"> key</span><span style="color:#569CD6;"> in</span><span style="color:#9CDCFE;"> array</span><span style="color:#D4D4D4;">) {</span></span>
<span class="line"><span style="color:#9CDCFE;">    console</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">log</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;1&gt;&gt;&gt;&gt; &#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">key</span><span style="color:#D4D4D4;">);</span></span>
<span class="line"><span style="color:#C586C0;">    if</span><span style="color:#D4D4D4;"> (</span><span style="color:#9CDCFE;">Object</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">hasOwnProperty</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">call</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">array</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">key</span><span style="color:#D4D4D4;">)) {</span></span>
<span class="line"><span style="color:#569CD6;">      const</span><span style="color:#4FC1FF;"> element</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">array</span><span style="color:#D4D4D4;">[</span><span style="color:#9CDCFE;">key</span><span style="color:#D4D4D4;">];</span></span>
<span class="line"><span style="color:#9CDCFE;">      console</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">log</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;2&gt;&gt;&gt;&gt; &#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">element</span><span style="color:#D4D4D4;">);</span></span>
<span class="line"><span style="color:#D4D4D4;">    }</span></span>
<span class="line"><span style="color:#D4D4D4;">  }</span></span>
<span class="line"><span style="color:#9CDCFE;">  console</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">log</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; for in Object&#39;</span><span style="color:#D4D4D4;">);</span></span>
<span class="line"><span style="color:#569CD6;">  let</span><span style="color:#9CDCFE;"> object</span><span style="color:#D4D4D4;"> = { </span><span style="color:#9CDCFE;">name:</span><span style="color:#CE9178;"> &#39;rrr&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">age:</span><span style="color:#B5CEA8;"> 18</span><span style="color:#D4D4D4;"> }</span></span>
<span class="line"><span style="color:#C586C0;">  for</span><span style="color:#D4D4D4;"> (</span><span style="color:#569CD6;">const</span><span style="color:#4FC1FF;"> key</span><span style="color:#569CD6;"> in</span><span style="color:#9CDCFE;"> object</span><span style="color:#D4D4D4;">) {</span></span>
<span class="line"><span style="color:#9CDCFE;">    console</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">log</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;1&gt;&gt;&gt;&gt; &#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">key</span><span style="color:#D4D4D4;">);</span></span>
<span class="line"><span style="color:#C586C0;">    if</span><span style="color:#D4D4D4;"> (</span><span style="color:#9CDCFE;">Object</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">hasOwnProperty</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">call</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">object</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">key</span><span style="color:#D4D4D4;">)) {</span></span>
<span class="line"><span style="color:#569CD6;">      const</span><span style="color:#4FC1FF;"> element</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">object</span><span style="color:#D4D4D4;">[</span><span style="color:#9CDCFE;">key</span><span style="color:#D4D4D4;">];</span></span>
<span class="line"><span style="color:#9CDCFE;">      console</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">log</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;2&gt;&gt;&gt;&gt; &#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">element</span><span style="color:#D4D4D4;">);</span></span>
<span class="line"><span style="color:#D4D4D4;">    }</span></span>
<span class="line"><span style="color:#D4D4D4;">  }</span></span>
<span class="line"><span style="color:#D4D4D4;">}, </span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">);</span></span>
<span class="line"><span style="color:#6A9955;">//*/</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="代理proxy" tabindex="-1"><a class="header-anchor" href="#代理proxy"><span>代理Proxy</span></a></h2><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="background-color:#1E1E1E;color:#D4D4D4;"><pre class="shiki dark-plus vp-code"><code><span class="line"></span>
<span class="line"><span style="color:#569CD6;">const</span><span style="color:#4FC1FF;"> target</span><span style="color:#D4D4D4;"> = {</span></span>
<span class="line"><span style="color:#9CDCFE;">  notProxied:</span><span style="color:#CE9178;"> &quot;original value&quot;</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#9CDCFE;">  proxied:</span><span style="color:#CE9178;"> &quot;original value&quot;</span></span>
<span class="line"><span style="color:#D4D4D4;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;">const</span><span style="color:#4FC1FF;"> handler</span><span style="color:#D4D4D4;"> = {</span></span>
<span class="line"><span style="color:#DCDCAA;">  get</span><span style="color:#9CDCFE;">:</span><span style="color:#569CD6;"> function</span><span style="color:#D4D4D4;"> (</span><span style="color:#9CDCFE;">target</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">prop</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">receiver</span><span style="color:#D4D4D4;">) {</span></span>
<span class="line"><span style="color:#C586C0;">    if</span><span style="color:#D4D4D4;"> (</span><span style="color:#9CDCFE;">prop</span><span style="color:#D4D4D4;"> === </span><span style="color:#CE9178;">&quot;proxied&quot;</span><span style="color:#D4D4D4;">) {</span></span>
<span class="line"><span style="color:#C586C0;">      return</span><span style="color:#CE9178;"> &quot;replaced value&quot;</span><span style="color:#D4D4D4;">;</span></span>
<span class="line"><span style="color:#D4D4D4;">    }</span></span>
<span class="line"><span style="color:#6A9955;">    // return Reflect.get(...arguments);</span></span>
<span class="line"><span style="color:#C586C0;">    return</span><span style="color:#9CDCFE;"> target</span><span style="color:#D4D4D4;">[</span><span style="color:#9CDCFE;">prop</span><span style="color:#D4D4D4;">];</span></span>
<span class="line"><span style="color:#D4D4D4;">  }</span></span>
<span class="line"><span style="color:#D4D4D4;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;">const</span><span style="color:#4FC1FF;"> proxy</span><span style="color:#D4D4D4;"> = </span><span style="color:#569CD6;">new</span><span style="color:#DCDCAA;"> Proxy</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">target</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">handler</span><span style="color:#D4D4D4;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#9CDCFE;">console</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">log</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">proxy</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">notProxied</span><span style="color:#D4D4D4;">); </span><span style="color:#6A9955;">// &quot;original value&quot;</span></span>
<span class="line"><span style="color:#9CDCFE;">console</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">log</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">proxy</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">proxied</span><span style="color:#D4D4D4;">);    </span><span style="color:#6A9955;">// &quot;replaced value&quot;</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;">const</span><span style="color:#4FC1FF;"> a</span><span style="color:#D4D4D4;"> = [</span></span>
<span class="line"><span style="color:#D4D4D4;">  {</span></span>
<span class="line"><span style="color:#9CDCFE;">    path:</span><span style="color:#CE9178;"> &#39;4.mp3&#39;</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#9CDCFE;">    isPlaying:</span><span style="color:#569CD6;"> true</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#9CDCFE;">    lastBeginTime:</span><span style="color:#B5CEA8;"> 104</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#9CDCFE;">    player:</span><span style="color:#CE9178;"> &#39;payer-1&#39;</span></span>
<span class="line"><span style="color:#D4D4D4;">  },</span></span>
<span class="line"><span style="color:#D4D4D4;">  {</span></span>
<span class="line"><span style="color:#9CDCFE;">    path:</span><span style="color:#CE9178;"> &#39;6.mp3&#39;</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#9CDCFE;">    isPlaying:</span><span style="color:#569CD6;"> true</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#9CDCFE;">    lastBeginTime:</span><span style="color:#B5CEA8;"> 106</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#9CDCFE;">    player:</span><span style="color:#CE9178;"> &#39;payer-2&#39;</span></span>
<span class="line"><span style="color:#D4D4D4;">  },</span></span>
<span class="line"><span style="color:#D4D4D4;">  {</span></span>
<span class="line"><span style="color:#9CDCFE;">    path:</span><span style="color:#CE9178;"> &#39;5.mp3&#39;</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#9CDCFE;">    isPlaying:</span><span style="color:#569CD6;"> false</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#9CDCFE;">    lastBeginTime:</span><span style="color:#B5CEA8;"> 102</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#9CDCFE;">    player:</span><span style="color:#CE9178;"> &#39;payer-3&#39;</span></span>
<span class="line"><span style="color:#D4D4D4;">  },</span></span>
<span class="line"><span style="color:#D4D4D4;">]</span></span>
<span class="line"><span style="color:#9CDCFE;">isPlaying</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">lastBeginTime</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B5CEA8;">6</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,6),e=[o];function D(t,c){return n(),l("div",null,e)}const y=s(p,[["render",D],["__file","反射Reflect_、代理Proxy.html.vue"]]),i=JSON.parse('{"path":"/interview/code/%E5%8F%8D%E5%B0%84Reflect_%E3%80%81%E4%BB%A3%E7%90%86Proxy.html","title":"反射Reflect,、代理Proxy","lang":"zh-CN","frontmatter":{"description":"反射Reflect,、代理Proxy Proxy Reflect 比较 Reflect 和 Object 方法 反射Reflect 代理Proxy","head":[["meta",{"property":"og:url","content":"https://cesium.guowei.fun/interview/code/%E5%8F%8D%E5%B0%84Reflect_%E3%80%81%E4%BB%A3%E7%90%86Proxy.html"}],["meta",{"property":"og:site_name","content":"学习笔记"}],["meta",{"property":"og:title","content":"反射Reflect,、代理Proxy"}],["meta",{"property":"og:description","content":"反射Reflect,、代理Proxy Proxy Reflect 比较 Reflect 和 Object 方法 反射Reflect 代理Proxy"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-11-20T09:06:46.000Z"}],["meta",{"property":"article:modified_time","content":"2024-11-20T09:06:46.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"反射Reflect,、代理Proxy\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-11-20T09:06:46.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"反射Reflect","slug":"反射reflect","link":"#反射reflect","children":[]},{"level":2,"title":"代理Proxy","slug":"代理proxy","link":"#代理proxy","children":[]}],"git":{"updatedTime":1732093606000,"contributors":[{"name":"国wei","email":"ygweric@gmail.com","commits":1}]},"autoDesc":true,"filePathRelative":"interview/code/反射Reflect,、代理Proxy.md"}');export{y as comp,i as data};
