import{_ as s,o as e,c as n,e as l}from"./app-CnK5B_QS.js";const a="/assets/Pasted%20image%2020241120154459-DWn8-ZkP.png",t={},o=l('<h1 id="宏任务、微任务" tabindex="-1"><a class="header-anchor" href="#宏任务、微任务"><span>宏任务、微任务</span></a></h1><h2 id="宏任务" tabindex="-1"><a class="header-anchor" href="#宏任务"><span>宏任务</span></a></h2><ul><li>script(整体代码)</li><li>setTimeout</li><li>setInterval</li><li>I/O</li><li>UI交互事件</li><li>postMessage</li><li>MessageChannel</li><li>setImmediate(Node.js 环境)</li></ul><h2 id="微任务" tabindex="-1"><a class="header-anchor" href="#微任务"><span>微任务</span></a></h2><ul><li>Promise.then</li><li>Object.observe</li><li>MutationObserver</li><li>process.nextTick(Node.js 环境)</li></ul><h2 id="运行机制" tabindex="-1"><a class="header-anchor" href="#运行机制"><span>运行机制</span></a></h2><p>在事件循环中，每进行一次循环操作称为 tick，每一次 tick 的任务处理模型是比较复杂的，但关键步骤如下：</p><ul><li>执行一个宏任务（栈中没有就从事件队列中获取）</li><li>执行过程中如果遇到微任务，就将它添加到微任务的任务队列中</li><li>宏任务执行完毕后，立即执行当前微任务队列中的所有微任务（依次执行）</li><li>当前宏任务执行完毕，开始检查渲染，然后GUI线程接管渲染</li><li>渲染完毕后，JS线程继续接管，开始下一个宏任务（从事件队列中获取）</li></ul><p><img src="'+a+`" alt=""></p><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="background-color:#1E1E1E;color:#D4D4D4;"><pre class="shiki dark-plus vp-code"><code><span class="line"><span style="color:#9CDCFE;">console</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">log</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;event start 1&#39;</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#DCDCAA;">setTimeout</span><span style="color:#D4D4D4;">(</span><span style="color:#569CD6;">function</span><span style="color:#D4D4D4;"> () {</span></span>
<span class="line"><span style="color:#9CDCFE;">  console</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">log</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;setTimeout 5&#39;</span><span style="color:#D4D4D4;">); </span><span style="color:#6A9955;">// 遇到 setTimeout, 回调进入到宏任务队列上</span></span>
<span class="line"><span style="color:#D4D4D4;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;">new</span><span style="color:#4EC9B0;"> Promise</span><span style="color:#D4D4D4;">(</span><span style="color:#569CD6;">function</span><span style="color:#D4D4D4;"> (</span><span style="color:#9CDCFE;">resolve</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">reject</span><span style="color:#D4D4D4;">) {</span></span>
<span class="line"><span style="color:#9CDCFE;">  console</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">log</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;promise start 2&#39;</span><span style="color:#D4D4D4;">)</span><span style="color:#6A9955;">// 遇到 Promise, 立即执行, then 函数进入到微任务队列</span></span>
<span class="line"><span style="color:#DCDCAA;">  resolve</span><span style="color:#D4D4D4;">()</span></span>
<span class="line"><span style="color:#D4D4D4;">}).</span><span style="color:#DCDCAA;">then</span><span style="color:#D4D4D4;">(</span><span style="color:#569CD6;">function</span><span style="color:#D4D4D4;"> () {</span></span>
<span class="line"><span style="color:#9CDCFE;">  console</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">log</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;promise end 4&#39;</span><span style="color:#D4D4D4;">) </span><span style="color:#6A9955;">// 同步代码执行结束, 主线程检查是否存在微任务, 发现 then, 执行</span></span>
<span class="line"><span style="color:#D4D4D4;">})</span></span>
<span class="line"><span style="color:#9CDCFE;">console</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">log</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;event end 3&#39;</span><span style="color:#D4D4D4;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,10),p=[o];function i(r,c){return e(),n("div",null,p)}const d=s(t,[["render",i],["__file","宏任务_微任务.html.vue"]]),m=JSON.parse('{"path":"/interview/code/%E5%AE%8F%E4%BB%BB%E5%8A%A1_%E5%BE%AE%E4%BB%BB%E5%8A%A1.html","title":"宏任务、微任务","lang":"zh-CN","frontmatter":{"description":"宏任务、微任务 宏任务 script(整体代码) setTimeout setInterval I/O UI交互事件 postMessage MessageChannel setImmediate(Node.js 环境) 微任务 Promise.then Object.observe MutationObserver process.nextTick(...","head":[["meta",{"property":"og:url","content":"https://cesium.guowei.fun/interview/code/%E5%AE%8F%E4%BB%BB%E5%8A%A1_%E5%BE%AE%E4%BB%BB%E5%8A%A1.html"}],["meta",{"property":"og:site_name","content":"学习笔记"}],["meta",{"property":"og:title","content":"宏任务、微任务"}],["meta",{"property":"og:description","content":"宏任务、微任务 宏任务 script(整体代码) setTimeout setInterval I/O UI交互事件 postMessage MessageChannel setImmediate(Node.js 环境) 微任务 Promise.then Object.observe MutationObserver process.nextTick(..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-11-20T08:17:39.000Z"}],["meta",{"property":"article:modified_time","content":"2024-11-20T08:17:39.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"宏任务、微任务\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-11-20T08:17:39.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"宏任务","slug":"宏任务","link":"#宏任务","children":[]},{"level":2,"title":"微任务","slug":"微任务","link":"#微任务","children":[]},{"level":2,"title":"运行机制","slug":"运行机制","link":"#运行机制","children":[]}],"git":{"updatedTime":1732090659000,"contributors":[{"name":"国wei","email":"ygweric@gmail.com","commits":2}]},"autoDesc":true,"filePathRelative":"interview/code/宏任务_微任务.md"}');export{d as comp,m as data};
